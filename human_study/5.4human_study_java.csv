code,SG-Trans,Adequacy,Conciseness,Fluency,GREAT,Adequacy,Conciseness,Fluency,NeuralCodeSum,Adequacy,Conciseness,Fluency,Transformer,Adequacy,Conciseness,Fluency,CodeTransformer,Adequacy,Conciseness,Fluency
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,5,5,4,safe to convert the string representation for a short value .,1,3,3,this method converts charset ' s asap letter to their string representation .,1,2,2,returns oid for algname,5,5,4,returns oid code algname .,4,5,2
"public void fireAnnotationSelected ( WorkflowAnnotation anno ) { List < WorkflowAnnotation > list = new LinkedList < > ( ) ; list . add ( anno ) ; fireAnnotationsChanged ( AnnotationEvent . SELECTED_ANNOTATION_CHANGED , list ) ; }
",fire when an annotation has been selected .,5,4,5,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,update when an annotation has been moved ie .,3,4,4
"public AwsIotConnection ( AbstractAwsIotClient client ) { this . client = client ; }
",creates a new connection .,3,5,5,creates a new connection with one byte compaction as a client side .,3,2,4,creates a new red5 object to acquire the specified client .,3,4,3,create a client with the server,4,5,5,resets a client client .,2,5,5
"public MetaDataColumnDescriptor ( String columnName , int jdbcType , Object defaultValue ) { _columnName = columnName . toUpperCase ( ) ; _jdbcType = jdbcType ; _defaultValue = defaultValue ; }
",creates a new lob .,2,5,3,create a standard java representation of a field .,1,5,5,create a tracerunnable object that can be used to look up the specified name .,1,4,4,returns a new exemption variable ordinary from upper case in readresponse ( no limit ) .,1,3,4,constructs a new object .,2,5,5
"public void add ( IPoint pt ) { if ( inProgress ) { throw new ConcurrentModificationException ( STRING ) ; } points . add ( pt ) ; }
",add point to the partial hull .,4,5,5,adds points to the partial hull .,4,5,4,add the given point .,3,5,5,add a point to the end of the polygon,4,3,4,add given at given given set and .,1,1,1
"public static Date parseText ( String dateStr ) { try { return mSimpleTextFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( STRING ) ; } }
",parse string to datetime,4,5,4,parse the given string into date object,5,5,3,parse string to date,4,5,4,parse string to date,4,5,4,parse string to datetime .,4,5,4
"public void addMessageObserver ( final MessageObserver observer ) { if ( observer == null ) { throw new NullPointerException ( ) ; } else if ( messageObservers == null ) { initMessageObserverList ( ) ; } messageObservers . add ( observer ) ; }
",adds the specified message observer .,5,5,5,adds the specified message to this message ' s list .,5,3,5,appends a message to this message .,3,4,3,adds a message to this rendered ' s platform .,2,4,4,adds an provided message observer to .,3,3,2
"protected final void updateBorderText ( final String text ) { Preconditions . checkNotNull ( text , STRING ) ; m_titledBorder . setTitle ( text ) ; updateUI ( ) ; }
",updates the border text of the text .,5,3,4,updates the border text based on the text of the control .,5,2,4,updates the cursor text about the phonetic text .,3,4,4,updates the border text according to the updating of the component .,5,3,3,updates and text with as a text .,2,2,1
"public void addColumn ( int idx , Column column ) { if ( column != null ) { columns . add ( idx , column ) ; } }
",adds a new column at the specified position .,4,5,5,adds a new column to the table .,4,5,5,adds a column at the given position .,5,5,5,adds a new column to the set of columns . this is used when the column has been created .,5,2,4,adds a column column to the table position .,5,3,3
"private Member nextMember ( Member . Type type ) { return new TestMember ( type , new Address ( STRING , ++ port ) , new Address ( STRING , port + _NUM ) ) ; }
",returns the next member reference .,5,4,4,get a member member .,3,4,3,returns a new member of the type ( including the tokenizer defined ) .,2,2,3,returns the specified object returns the sales .,3,3,3,returns the member member .,3,4,3
"protected int executePrepareStatement ( List < Column > columns , PreparedStatement statement ) throws SQLException { int bindNo = _NUM ; for ( Column c : columns ) { setColumnValue ( statement , bindNo , c ) ; bindNo ++ ; } return statement . executeUpdate ( ) ; }
",executes a prepared statement using values supplied as arguments .,5,3,5,executes an insert query with values supplied as arguments .,4,4,5,executes a sql statement using the provided statement and return the result .,4,4,4,executes a prepared statement using update ( or certificates ) and stores the update statements .,5,3,4,execute the batch statement .,2,5,4
"public static String toString ( Reader reader , long timeout ) throws IOException { StringWriter sw = new StringWriter ( _NUM ) ; copy ( toBufferedReader ( reader ) , sw , timeout ) ; sw . close ( ) ; return sw . toString ( ) ; }
",reads string data from a reader,4,5,5,"reads a string data from the xml string , optionally closing the timeout .",4,3,4,reads string data object to a reader,4,4,3,reads string data from a reader,4,5,5,read reader from from a reader .,2,3,2
"ListBasedTokenStream ( AttributeSource attributeSource , List < AttributeSource > tokens ) { super ( attributeSource . getAttributeFactory ( ) ) ; this . tokens = tokens ; addAttributes ( attributeSource ) ; }
",creates a new listbasedtokenstream which uses the given attribute source .,5,4,5,creates a new listbasedtokenstream which wraps the attributes of the supplied shadow . only attributes will be set in sdk .,5,3,4,"creates an priority attribute list with the given attribute , using the given regular expression bundle .",4,3,4,creates a new listbasedtokenstream which uses the given attributes ( only " no cluster ) .,5,3,5,constructs a new attribute which is the provided attribute as an attribute .,3,4,4
"protected void appendText ( final String text ) { if ( text != null ) { textBody . append ( text ) ; } }
",append text to the start of the buffer .,3,5,5,"append a text , except when text is received .",4,5,5,"append text , splitting the contents of the text , and escapes the associated tag if necessary .",4,5,4,prints the text in the overview,2,4,3,append text to the body body .,2,4,2
"@ SuppressWarnings ( STRING ) public PropagationImp ( Stack < CompositeTransaction > lineage , boolean serial , long timeout ) { serial_ = serial ; lineage_ = ( Stack < CompositeTransaction > ) lineage . clone ( ) ; timeout_ = timeout ; }
",create a new instance .,2,5,5,clone a new instance with a given timeout .,4,5,4,create a new transaction for the specified amount of time .,3,4,5,create a new instance of transitioned .,2,4,4,construct a new instance with the specified detail string and exception .,2,4,5
"public void add ( String methodName , List < Expression > parameters ) { chain . add ( new DotExpressionItem ( methodName , parameters , _BOOL ) ) ; }
",add a method to the chain of methods after the chain of parameters .,4,3,3,"adds a method to the chain of methods after the dot , indicating that this segment is a property and does not need parenthesis and won ' t have paramaters .",3,2,3,add a single - item to the chain of methods after removing the parameters .,2,3,3,"add a method to the chain of methods after the dot , indicating the this segment is a list of methods and does not need a dot with a flow offset . note : this method handles a flow of the dot - > 80 .",3,5,3,add a parameterized to the list of methods that the chain does .,3,4,3
"private int calculateTotalHeight ( float starSize , int numberOfStars , float starsSeparation , boolean padding ) { return Math . round ( starSize ) + ( padding ? getPaddingTop ( ) + getPaddingBottom ( ) : _NUM ) ; }
",calculates total height to occupy based on several parameters,5,4,4,calculates total width to align width / height based on several crop set of other image,4,3,4,calculates total width to occupy based on several parameters,3,4,4,calculates total width to occupy based on several parameters,3,4,4,calculates total width to occupy based on several parameters .,3,4,4
"public void removeAction ( NetworkUpdateAction action ) { actionList . remove ( action ) ; for ( UpdateManagerListener listener : listeners ) { listener . actionRemoved ( action ) ; } }
",completely remove an action .,4,4,5,remove an action .,4,5,5,remove an action from the list .,5,5,5,completely remove an action .,4,4,5,removes remove an action from .,2,2,1
"public byte [ ] toByteArray ( ) { return Arrays . copyOf ( buf , cnt ) ; }
",creates a newly allocated byte array . its size is the current size of this output stream and the valid contents of the buffer have been copied into it .,5,3,3,safe access to the digest stored in a hash,3,4,3,safe access to the digest stored in a hash,3,4,3,returns the written bytes in a byte array . its size is the current size of this output stream .,4,3,4,gets the byte byte byte array .,2,3,1
"HttpStreamWrapper ( HttpStream stream ) throws IOException { _stream = stream ; }
",creates a new http stream wrapper .,5,5,5,creates a new timeobject object .,1,5,5,constructs a new instance of this class .,2,5,4,constructs a new stream of reflects .,3,5,3,creates a new xmlwriter plugin .,1,4,5
"public static void discard ( ) { current . remove ( ) ; }
",discards any active baggage currently in this thread,5,4,4,discards the current thread,5,5,5,discards any current entities currently in the database,3,4,5,removes the current player from being triggered in this thread .,2,4,3,discards all currently state currently in this thread .,4,2,2
"public boolean add ( symbol sym ) throws internal_error { Object previous ; not_null ( sym ) ; previous = _all . put ( sym . name ( ) , sym ) ; return previous == null ; }
",add a single symbol to the set .,5,4,4,add a symbol to the set .,5,5,5,add a symbol to the set .,5,5,5,adds a single object to the set of minidump .,3,4,4,adds the specified symbol to this adapter if .,3,4,3
"private void storePassword ( String password ) { if ( isStore && sharedState != null ) { sharedState . put ( getPwdKey ( ) , password ) ; } }
",store a password to the supplied keyboard . this method should be called after successful authentication by each individual user .,5,5,5,store password whether password will be g . this method should be called by the user that stop operations to maintain password in shared password .,4,4,3,"store current password map . this will be used when shared by the client ' s login file , choose choose choose services .",4,3,2,stores the user password and password scores into the datetimezone store . this method should be called after a password has been released from the keystore if no password could be released .,4,4,2,saves password information the state .,3,4,3
"public static long [ ] asLongArray ( final List < Long > l ) { final long [ ] a = new long [ l . size ( ) ] ; for ( int i = _NUM ; i < a . length ; i ++ ) { a [ i ] = l . get ( i ) ; } return a ; }
",return list of longs as a primitive array .,5,5,5,converts a list of longs to a primitive array .,4,5,5,return a list of longs as an array of primitive longs .,5,4,5,converts array to list of longs .,4,5,5,converts list of primitive integers as a primitive array .,3,4,5
"public boolean isExpired ( ) { return ( cookieExpiryDate != null && cookieExpiryDate . getTime ( ) <= System . currentTimeMillis ( ) ) ; }
",returns true if this cookie has expired .,3,5,5,returns true if this cookie has expired according to the time passed in .,5,5,5,returns true if this cookie has expired according to the time passed in .,5,5,5,returns true if this cookie has expired according to the time passed in .,5,5,5,returns true if this cookie has expired .,3,5,5
"public int countArray ( String [ ] array ) { return array . length ; }
",counts the count of values in an array .,5,4,5,counts how many values in the array ' s elements are stored in to the specified array .,5,3,5,"fill an already - allocated array with the values of the specified array . if the argument is null , the same size will be allocated and returned .",1,3,3,"returns a copy of the values in this array as a java . lang . values will be allocated , so that it can be allocated in the same order as the number of values specified by the array ' s iterator .",1,3,4,return the contents of the array if .,1,3,2
"public void removePhoto ( PhotoEntity photo ) { photos . remove ( photo ) ; }
",removes the given photo from this user,4,5,4,removes a new photo from this user,3,5,5,removes a photo from this user,3,5,4,removes the given photo from this user,4,5,4,removes a given photo from this user .,4,5,4
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,5,5,5,"creates an instance of the command , which will use the default dproviderinfo .",5,3,4,resolve info about a split object .,3,5,3,this is the methods that will be used for all activity with the provided activity .,3,5,4,creates an new instance of this class using .,4,5,5
"public byte [ ] readBytes ( ) throws IOException { int len = readInt ( ) ; if ( len == - _NUM ) { return null ; } byte [ ] b = DataUtils . newBytes ( len ) ; in . readFully ( b ) ; return b ; }
",read a byte array completely .,4,4,5,read bytes from the input stream .,5,5,5,read a number of bytes from the input stream .,3,5,5,read len bytes from the underlying input stream .,2,5,4,read a byte from from .,3,4,2
"public static String cutFromIndexOf ( String string , String substring ) { int i = string . indexOf ( substring ) ; if ( i != - _NUM ) { string = string . substring ( i ) ; } return string ; }
",cuts the string from the first index of provided substring to the end .,5,5,5,cuts the string from the first index of provided substring .,4,5,5,cuts the string from the first index of provided substring .,4,5,5,cuts the string from the first index of provided substring to the end .,4,5,5,cuts the string at beginning first index of provided substring .,4,4,5
"public byte [ ] serializeToBuffer ( Object o ) throws IOException { ByteArrayOutputStream bufOut = new ByteArrayOutputStream ( ) ; try { serialize ( bufOut , o ) ; bufOut . flush ( ) ; return bufOut . toByteArray ( ) ; } finally { bufOut . close ( ) ; } }
",serializes the object to a byte buffer .,5,4,5,serialize the object to a buffer .,5,5,5,serialize object to a byte array . returns the object has to be stored as a byte array .,4,4,4,converts a serialized object to a byte array .,4,4,5,serialize the object to a byte array .,4,5,5
"public void addRam ( AttackAction ea ) { pendingRams . addElement ( ea ) ; processGameEvent ( new GameNewActionEvent ( this , ea ) ) ; }
",adds a pending ramming attack to the list for this phase .,4,5,5,adds a pending displacement attack to the list for this phase .,3,4,5,adds a pending displacement attack to the list for this phase .,3,4,5,adds a pending ramming attack to the list for this phase .,4,5,5,adds a pending attack to to the list .,4,5,5
"public int read ( ) throws IOException { int val ; if ( ( val = is . read ( ) ) < _NUM ) { return - _NUM ; } if ( bo == STRING ) { val = ( char ) ( ( val << _NUM ) | ( is . read ( ) & _NUM ) ) ; } else { val = ( char ) ( ( is . read ( ) << _NUM ) | ( val & _NUM ) ) ; } return val ; }
",reads a single character .,5,5,5,reads a single integer from the stream .,1,5,5,reads characters into a character buffer and returns it as a string .,3,5,4,reads 32 char . like datainputstream . readchar except little endian .,2,1,1,reads the byte number or .,1,1,1
"public boolean equals ( Object object ) { if ( object == null || ! ( object instanceof SessionID ) ) { return _BOOL ; } SessionID another = ( SessionID ) object ; return encryptedString . equals ( another . encryptedString ) ; }
",compares this sessionid to the specified object . the result is true if and only if the argument is not null and the random string and server name are the same in both objects .,4,4,5,compares this sessionid with the specified object . the result is true if and only if the argument is not null and the random string is an objectendpoint xml document .,4,4,5,compares two policy legend . returns true if the object passed in matches the soap .,1,2,2,compares the session id for this object . the object is defined if sslv2 and extra in the spin string .,1,2,3,returns whether session name returns another specified name .,1,3,3
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,1,5,5,"creates an instance of the command , which will use the default dproviderinfo .",1,3,4,resolve info about a split object .,1,5,5,this is the methods that will be used for all activity with the provided activity .,1,4,5,creates an new instance of this class using .,1,4,5
"public ArrayList < MechSummary > generateUnits ( int num , UnitFilter filter ) { ArrayList < MechSummary > retVal = new ArrayList < > ( ) ; for ( int i = _NUM ; i < num ; i ++ ) { MechSummary ms = generateUnit ( filter ) ; if ( ms != null ) { retVal . add ( ms ) ; } } return retVal ; }
",selects a number of units from the table .,2,4,5,selects a list of units from the transition - 1 and puts the transition in the list .,2,3,4,selects a join report from the list of filter - order 0 - valued eviction .,1,1,2,performs a list of units for zoom requests .,1,3,3,loads the list of units from the list .,2,4,5
"public static String decode ( AbstractMessage msg , Boolean ext , int header ) { if ( ext == _BOOL ) { return decode ( msg ) ; } return STRING + header ; }
",return a string representation of a decoded canmessage,5,4,5,return a hex string for a decoded canmessage,2,5,5,decode a message and returns its textual representation .,5,5,5,return a string containing an occurrence of a decoded header,3,5,5,decode an header info from the header header header .,2,2,5
"public void deleteItem ( int position ) { if ( ! isDataListEmpty ( ) && position >= _NUM && position < mDataList . size ( ) ) { mDataList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
",delete an item by position,5,5,5,removes an item from the list,4,5,5,delete an item to delete,4,3,4,remove item from list,4,5,5,remove an item item the .,4,3,4
"public int size ( ) { return all . size ( ) ; }
",return the number of signers in the collection .,3,4,5,size of the set,4,5,5,size of the set,4,5,5,return the number of signers in the collection .,3,4,5,return the number of signers in the collection .,3,4,5
"public PWResetException ( String bundleName , String errCode , Object [ ] args ) { super ( bundleName , errCode , args ) ; errList = new ArrayList ( _NUM ) ; errList . add ( getMessage ( ) ) ; }
",creates a password reset exception object .,2,3,5,creates a formatted exception object,3,5,5,creates a new instance of decoder,1,5,5,creates a password reset exception object .,2,3,5,creates a new instance exception instance .,3,4,5
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,2,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",2,3,4,check if a given string is a integer .,1,5,5,"return true if this type is a string , false otherwise .",5,5,5,return true if this type is to as as or .,1,1,3
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,1,2,2,waits for the request to highlight the locator .,1,4,5,waits for the node to have expired .,1,5,4,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",1,2,4,handles the request request request request request request request request request request used request .,1,1,2
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,3,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,1,4,5,returns a new charseq with the same content,1,5,5,"returns a new charseq whose value is this charseq , with the given string",1,5,5,returns a with given given string .,1,1,1
"private static MappingObject ObjectAt ( PCalLocation loc , MappingObject [ ] [ ] map ) { return map [ loc . getLine ( ) ] [ loc . getColumn ( ) ] ; }
",location of object array loc .,1,4,5,"mapping between two double at the beginning of the specified line , where the last element is already null .",1,5,5,return a mapping as per object,2,4,5,"it uses the mapping to find location ( i . e . , the line - forward ) .",2,4,5,convert the mapping distance the index from the the to the the .,1,2,3
"protected void handle ( Exception exception , String title , String message ) { Utils . handleError ( getShell ( ) , exception , title , message ) ; }
",handle the specified error .,4,5,5,handles any exception that is thrown when processing a oauth2 authorization request .,4,4,4,handles a mini - language validation error .,2,2,4,handles an exception that occurred during the user .,3,3,4,handles an error error with a error box .,3,3,5
"private void evaluatePopup ( MouseEvent e ) { if ( e . isPopupTrigger ( ) ) { JPopupMenu menu = createBookmarkPopupMenu ( ) ; if ( menu != null ) { menu . show ( this , e . getX ( ) , e . getY ( ) ) ; } } }
","if this is a popup trigger , this method should call to check if the popup triggers and it is a popup menu depending on the mouse event .",4,5,5,evaluate the popup menu for the event .,3,5,5,called at potential popup triggers .,4,5,4,called at potential popup triggers .,4,5,4,attach the the given popup menu menu a popup menu menu menu the menu menu menu .,1,2,4
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,5,5,5,safe to convert the string representation for a short value .,1,4,5,this method converts charset ' s asap letter to their string representation .,1,4,5,returns oid for algname,5,5,5,returns oid code algname .,4,4,4
"private void updateLineList ( ) { if ( horizontalLineRadiobutton . isSelected ( ) ) { setHorizontalLineSelected ( ) ; } else { setVerticalLineSelected ( ) ; } updateButtonStates ( ) ; }
",updates the previous line .,1,5,5,set the select button of the horizontal .,1,5,5,sets the line from the list ( if any ) and sets them to the current selection .,1,5,4,updates the background of the card buttons depending on the current selected line .,2,5,5,ensures the visible button of the that .,1,4,4
"public void replaceSplitElement ( int aIndex , Fragment aSplitElement ) { splits . set ( aIndex , aSplitElement ) ; }
",split split element by beginning,1,3,4,replaces an element at the beginning with the specified element,2,5,5,"replace an existing one interior instance with the elements of the list , and if it ' s in the new one .",1,3,3,"adds a split element to the beginning instruction this is trying to store trying the index for the formula . typically , store the element tree rooted at the index .",1,2,2,splits the split of in the but .,1,1,1
"private static int numInitialSplits ( long numRecords ) { final int maxSplits = _NUM ; final long recordsPerSplit = _NUM ; return ( int ) Math . min ( maxSplits , numRecords / recordsPerSplit + _NUM ) ; }
",compute the number of records in the specified number of searchfor .,2,4,4,uses a split number of attempts to make the main measurement selection note that the number of times the number of isolated isolated can occur .,1,2,1,calculates the number of rules that can be easily used later on any other export ( this is necessary for the given snapshot ) .,1,5,4,returns the largest power of two formatted that have the given size .,1,5,3,returns the total of records record in in range record in records .,1,1,3
"protected void markUsed ( Entry entry ) { entry . lastUsed = System . nanoTime ( ) ; }
",mark entry as activated by use it to make sure that a connection is activated .,2,5,4,mark the current node as follows .,1,5,5,mark the entry as separated by the currently collected key .,1,5,5,mark the stream as soon as we fail .,1,5,5,starts the entry entry .,1,3,5
"private < T > UnaryOperator < T > compose ( UnaryOperator < T > before , UnaryOperator < T > after ) { return null ; }
","compose a stream of functions into a single function , which applies each one after the other",2,5,5,"create a function after a side function of mapping , which applies each batch of a batch operator after the other operator has been applied , which is a mix function .",1,3,3,a function to compose one - hand functions of a ' before ',2,2,1,"tries to locate a stream of the given function which is , returning null .",1,5,2,todo the operations of as a function function which .,1,3,3
"private boolean hasNext ( Pattern pattern ) { if ( ! hasNext ( ) ) { return _BOOL ; } Matcher matcher = pattern . matcher ( gserValue . substring ( pos , length ) ) ; return matcher . find ( ) ; }
",returns true if the input matches the given pattern .,3,5,5,skips the next iff the parser has at the given position in the pattern .,1,4,5,returns true if the given pattern contains at least one item in the given pattern,3,3,4,returns true if the input matched the given pattern has a point in the document .,2,5,4,determines if the given token is is the given pattern .,1,3,5
"public static < R , A , B > CompletionStage < R > combine ( CompletionStage < A > a , CompletionStage < B > b , BiFunction < A , B , R > function ) { return a . thenCombine ( b , function ) ; }
",combine a function into a function .,4,5,5,the function should be supplied as the result of applying two values . the function finds each byte using a treeset function and the results from the original function and and returns the result .,1,4,5,this function takes a single function representation as the first pass of a function,1,5,5,this function is called to be a bridge - b / c connected to a single distribution,1,3,1,this the of of a a single that .,1,1,1
"public StreamInfoManager ( TwitchApi api , StreamInfoListener listener ) { this . listener = listener ; this . api = api ; pendingRequests = new HashMap < > ( ) ; invalidStreamInfo = new StreamInfo ( STRING , listener ) ; invalidStreamInfo . setRequested ( ) ; }
",creates a stream object .,1,5,5,creates a new instance with the specified api .,2,5,5,create a new instance of this class .,1,5,5,initializing for the target listener with the information supplied in the client .,3,5,5,create a new instance .,1,5,5
"public Sentence asSentence ( ) { return Sentence . newConjunction ( sentences ) ; }
",returns a sentence sentence from the annotation .,3,3,5,convert the sentence into its sub - model .,1,5,5,returns a structuredtranslation of the structure .,1,1,5,returns a conjunction of conjuncts .,1,1,5,return the sentence of sentence on the sentence .,1,1,3
"public boolean isPronoun ( ) { return typeString . contains ( SUFFIX_PRONOUN ) ; }
",determine if the expression is a tree .,1,5,5,determine if the expression is some fluid .,1,5,4,determine if the expression is some fluid .,1,5,4,determine if the expression is some food .,1,5,4,determine if the expression is a regular expression .,1,5,4
"KeyStoreState ( ) { }
",create a new empty keystore,4,5,5,create new empty state store instance .,3,5,5,construct new empty keystore,4,5,5,create a new empty keystore for the state of an unsaved journal,2,5,5,creates new instance message of .,2,5,3
"private static boolean isInNeedOfForm ( UIComponent component ) { return ( component instanceof ActionSource || component instanceof ActionSource2 || component instanceof EditableValueHolder ) ; }
",determines whether a component is an action .,2,5,5,determine if the given action is source .,2,5,5,determines if the component of the component represents the given component and the component components .,1,1,3,check if the component is in the preview component .,1,5,5,determine a bigdecimal check determine button the component area .,1,3,1
"public Node ( Coordinate pt ) { this ( pt , new DirectedEdgeStar ( ) ) ; }
",creates a new rotate node with a unique capacity .,1,5,5,creates a copy of the focus,1,5,5,"creates a new , and specifies the polygon for the given node .",1,5,5,creates a new edge edge with the given node .,1,3,5,creates a new instance the given location .,1,5,2
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the intersection size of two bitsets .,4,5,2
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,4,5,3,outputs a description of one attribute .,3,5,5,returns a text attribute list ( ) that is represented by a small string .,4,3,4,returns a description of this attribute and the auto - string describing a ring of the class and values .,5,2,4,returns optimal text text of .,2,3,1
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide rounding negative rounding mode .,5,5,5
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,1,5,4,kills a specific player .,2,5,5,"start tom , no longer used .",2,5,3,removes an storage range from items,3,5,5,remove an exit status status status the status status .,1,1,1
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",3,5,3,determine the level of the given level,3,5,5,"return the index to fit the given level , replacing all transfers of the old edge to the new level",2,3,4,multiplies = max + max level,2,4,2,checks the not minimum for .,1,4,2
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,3,5,5,emits a string entry to a log file in the local cache that contains the specified entry .,4,3,3,inserts an entry into the disk cache .,3,5,4,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,3,4,4,internal snapshot of and local local file and and and and .,3,5,2
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,4,4,3,back from the queue < p > json object can be called after the stop is committed,1,2,2,update the view from the json and fill the given inputs,5,5,5,set the uninitialized state of uninitialized requests,3,5,3,computes the media object the page page if .,2,4,4
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,4,5,5,creates a new instance .,4,5,5,creates a new instance .,4,5,5,creates a new instance .,4,5,5,creates an new instance of this class using .,4,3,5
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a arguments .,5,4,3
"public RepeatedFieldBuilder < MType , BType , IType > addMessage ( MType message ) { if ( message == null ) { throw new NullPointerException ( ) ; } ensureMutableMessageList ( ) ; messages . add ( message ) ; if ( builders != null ) { builders . add ( null ) ; } onChanged ( ) ; incrementModCounts ( ) ; return this ; }
",appends the specified element to the end of this list .,5,5,5,appends the specified element to the end of this list .,5,5,5,appends the specified element to the end of this list .,5,5,5,"appends the specified element to the end of this list , if the element is not already present .",5,3,4,appends the specified element to the end of this list .,5,5,5
"private static boolean checkValue ( String val ) throws MalformedObjectNameException { if ( val == null ) throw new NullPointerException ( STRING ) ; final int len = val . length ( ) ; if ( len == _NUM ) return _BOOL ; final char [ ] s = val . toCharArray ( ) ; final int [ ] result = parseValue ( s , _NUM ) ; final int endValue = result [ _NUM ] ; final boolean value_pattern = result [ _NUM ] == _NUM ; if ( endValue < len ) throw new MalformedObjectNameException ( STRING + s [ endValue ] + STRING ) ; return value_pattern ; }
",check the value of the two strings . the following value is within the # ( ) method,3,4,3,checks that a given string value is either .,3,5,2,check that the value is a valid pattern string .,5,5,4,parse a value in the form " or value of an object,3,4,3,matches the the specified value matches the valid integer .,3,3,3
"public void remove ( ) throws RecurrenceInfoException { List < RecurrenceRule > rulesList = new ArrayList < RecurrenceRule > ( ) ; rulesList . addAll ( rRulesList ) ; rulesList . addAll ( eRulesList ) ; try { for ( RecurrenceRule rule : rulesList ) rule . remove ( ) ; info . remove ( ) ; } catch ( RecurrenceRuleException rre ) { throw new RecurrenceInfoException ( rre . getMessage ( ) , rre ) ; } catch ( GenericEntityException gee ) { throw new RecurrenceInfoException ( gee . getMessage ( ) , gee ) ; } }
",removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the intersection size of two bitsets .,4,5,2
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,4,5,3,outputs a description of one attribute .,3,5,5,returns a text attribute list ( ) that is represented by a small string .,4,3,4,returns a description of this attribute and the auto - string describing a ring of the class and values .,5,2,4,returns optimal text text of .,2,3,1
"private static boolean isDoubleEqual ( double value , double valueToCompare ) { return ( Math . abs ( value - valueToCompare ) < _NUM ) ; }
",verifies that the double value is equal to the given double . if the double value is not finite as a negative number .,5,3,4,returns true if the value is a " decimal " double to the given double value .,2,5,4,check if double value is equal to the tail,5,5,4,returns true if the given value is equal to this minimum function .,3,5,4,this if value present value to needed to .,1,2,1
"public void testIntValuePos ( ) { String a = STRING ; BigDecimal aNumber = new BigDecimal ( a ) ; int result = - _NUM ; assertTrue ( STRING , aNumber . intValue ( ) == result ) ; }
",integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a negative bigdecimal .,3,5,5
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5
"public static Object [ ] ordinalArray ( TupleSet tuples , String field ) { return ordinalArray ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
",get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator .,4,5,5
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide rounding negative rounding mode .,5,5,5
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,5,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",4,3,2,check if a given string is a integer .,1,5,5,"return true if this type is a string , false otherwise .",5,3,4,return true if this type is to as as or .,2,3,1
"private void validateSqlStatement ( String sql , int jdbcStatementIndex ) { Assert . isTrue ( StringUtils . isNotBlank ( sql ) , STRING + jdbcStatementIndex + STRING ) ; }
",validate if the jni statement is not valid,2,5,4,validate the given sql statement in the database .,3,5,5,check if sql statement .,3,4,2,"validates the given sql statement and adds statements to the expected parameters . if the sql string is not empty , it will be an exception .",3,3,3,check if passed statement statement entry any statement is the database .,2,3,2
"public static Long [ ] valuesOf ( long [ ] array ) { Long [ ] dest = new Long [ array . length ] ; for ( int i = _NUM ; i < array . length ; i ++ ) { dest [ i ] = Long . valueOf ( array [ i ] ) ; } return dest ; }
",converts to object array .,5,5,5,converts to object array .,5,5,5,converts to object array .,5,5,5,converts to object array .,5,5,5,converts to byte array .,5,5,5
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,1,5,4,kills a specific player .,2,5,5,"start tom , no longer used .",2,5,3,removes an storage range from items,3,5,5,remove an exit status status status the status status .,1,1,1
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",3,5,3,determine the level of the given level,3,5,5,"return the index to fit the given level , replacing all transfers of the old edge to the new level",2,3,4,multiplies = max + max level,2,4,2,checks the not minimum for .,1,4,2
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,3,5,5,emits a string entry to a log file in the local cache that contains the specified entry .,4,3,3,inserts an entry into the disk cache .,3,5,4,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,3,4,4,internal snapshot of and local local file and and and and .,3,5,2
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public boolean boundScroll ( ) { float curScroll = getStackScroll ( ) ; float newScroll = getBoundedStackScroll ( curScroll ) ; if ( Float . compare ( newScroll , curScroll ) != _NUM ) { setStackScroll ( newScroll ) ; return _BOOL ; } return _BOOL ; }
","bounds the current scroll if necessary , but does not synchronize the stack view with the model .",5,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",5,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",5,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",5,5,5,bounds the current scroll if necessary but .,3,3,2
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,4,4,4,waits for the request to highlight the locator .,4,5,5,waits for the node to have expired .,3,5,5,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",5,4,3,handles the request request request request request request request request request request used request .,1,1,1
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,4,5,3,back from the queue < p > json object can be called after the stop is committed,4,5,5,update the view from the json and fill the given inputs,4,5,5,set the uninitialized state of uninitialized requests,2,3,4,computes the media object the page page if .,2,1,1
"public void addSeriesRenderer ( int index , SimpleSeriesRenderer renderer ) { mRenderers . add ( index , renderer ) ; }
",adds a simple renderer to the multiple renderer .,4,4,5,adds a simple renderer to the multiple renderer .,4,4,5,adds a simple renderer to the multiple renderer .,4,4,5,adds a simple renderer to the multiple renderer .,4,4,5,adds a simple renderer to the multiple renderer .,4,4,5
"private float calcAngle ( float value ) { return value / mData . getYValueSum ( ) * _NUM ; }
",calculates the needed angle for a given value,4,5,5,calculates the needed angle for a given value,4,5,5,calculates the needed angle for a given value,4,5,5,calculates the needed angle for a given value,4,5,5,calculates the needed angle for a given value .,4,5,5
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates an new instance of this class using .,3,5,5
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,4,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,5,4,5,returns a new charseq with the same content,4,5,5,"returns a new charseq whose value is this charseq , with the given string",5,4,3,returns a with given given string .,3,3,3
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a arguments .,4,5,5
"public static String decodeCharset ( String s , String charset ) { if ( s == null ) { return null ; } try { byte buf [ ] = s . getBytes ( ASCII_CHARSET ) ; return ( new String ( buf , _NUM , buf . length , charset ) ) ; } catch ( UnsupportedEncodingException uee ) { return s ; } }
","decodes ' s basic encoding - encoded octets in ' % ' , using the specified encoding .",4,3,4,decodes data in the specified string using the utf - 8 scheme .,4,4,5,decode a string that looks like " % 25 " and two - character escapes " . the platform is converted to the character encoding .,4,5,5,"decodes a byte array into its string , using the specified encoding as specified by the base64 encoding . escaped characters are converted back to their original representation .",4,3,4,converts the contents that an string using .,2,3,5
"public void addRestrictedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( restrictedDomains == null ) { restrictedDomains = new ArrayList < > ( ) ; } restrictedDomains . add ( domainName ) ; }
",adds specified domain name to the list of restricted domains,4,5,5,adds specified domain name to the list of restricted domains,4,5,5,adds specified domain name to the list of restricted domains,4,5,5,add specified domain name to the list of permitted domains,4,5,5,adds a sub name to the sub of sub sub sub .,2,2,2
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,3,5,5,safe to convert the string representation for a short value .,5,5,5,this method converts charset ' s asap letter to their string representation .,5,5,5,returns oid for algname,3,5,5,returns oid code algname .,3,5,5
"public void fireAnnotationSelected ( WorkflowAnnotation anno ) { List < WorkflowAnnotation > list = new LinkedList < > ( ) ; list . add ( anno ) ; fireAnnotationsChanged ( AnnotationEvent . SELECTED_ANNOTATION_CHANGED , list ) ; }
",fire when an annotation has been selected .,3,5,5,fire when the something minor with workflow annotations has changed which only requires a repaint .,4,5,5,fire when the something minor with workflow annotations has changed which only requires a repaint .,4,5,5,fire when the something minor with workflow annotations has changed which only requires a repaint .,4,5,5,update when an annotation has been moved ie .,4,5,5
"public AwsIotConnection ( AbstractAwsIotClient client ) { this . client = client ; }
",creates a new connection .,3,5,5,creates a new connection with one byte compaction as a client side .,4,5,5,creates a new red5 object to acquire the specified client .,4,5,5,create a client with the server,3,5,5,resets a client client .,3,3,3
"public MetaDataColumnDescriptor ( String columnName , int jdbcType , Object defaultValue ) { _columnName = columnName . toUpperCase ( ) ; _jdbcType = jdbcType ; _defaultValue = defaultValue ; }
",creates a new lob .,2,5,5,create a standard java representation of a field .,3,5,5,create a tracerunnable object that can be used to look up the specified name .,4,5,5,returns a new exemption variable ordinary from upper case in readresponse ( no limit ) .,3,4,5,constructs a new object .,2,5,5
"public void add ( IPoint pt ) { if ( inProgress ) { throw new ConcurrentModificationException ( STRING ) ; } points . add ( pt ) ; }
",add point to the partial hull .,3,5,5,adds points to the partial hull .,3,5,5,add the given point .,2,5,5,add a point to the end of the polygon,3,5,5,add given at given given set and .,1,1,1
"public static Date parseText ( String dateStr ) { try { return mSimpleTextFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( STRING ) ; } }
",parse string to datetime,3,5,5,parse the given string into date object,4,5,5,parse string to date,3,5,5,parse string to date,3,5,5,parse string to datetime .,3,5,5
"public void addMessageObserver ( final MessageObserver observer ) { if ( observer == null ) { throw new NullPointerException ( ) ; } else if ( messageObservers == null ) { initMessageObserverList ( ) ; } messageObservers . add ( observer ) ; }
",adds the specified message observer .,3,5,5,adds the specified message to this message ' s list .,3,5,5,appends a message to this message .,2,3,5,adds a message to this rendered ' s platform .,4,5,5,adds an provided message observer to .,3,2,3
"protected final void updateBorderText ( final String text ) { Preconditions . checkNotNull ( text , STRING ) ; m_titledBorder . setTitle ( text ) ; updateUI ( ) ; }
",updates the border text of the text .,3,3,5,updates the border text based on the text of the control .,3,2,5,updates the cursor text about the phonetic text .,4,4,5,updates the border text according to the updating of the component .,4,3,5,updates and text with as a text .,3,3,5
"public void addColumn ( int idx , Column column ) { if ( column != null ) { columns . add ( idx , column ) ; } }
",adds a new column at the specified position .,3,5,5,adds a new column to the table .,2,5,5,adds a column at the given position .,3,5,5,adds a new column to the set of columns . this is used when the column has been created .,4,4,5,adds a column column to the table position .,3,3,3
"private Member nextMember ( Member . Type type ) { return new TestMember ( type , new Address ( STRING , ++ port ) , new Address ( STRING , port + _NUM ) ) ; }
",returns the next member reference .,3,5,5,get a member member .,2,3,3,returns a new member of the type ( including the tokenizer defined ) .,4,5,5,returns the specified object returns the sales .,3,3,3,returns the member member .,2,3,2
"protected int executePrepareStatement ( List < Column > columns , PreparedStatement statement ) throws SQLException { int bindNo = _NUM ; for ( Column c : columns ) { setColumnValue ( statement , bindNo , c ) ; bindNo ++ ; } return statement . executeUpdate ( ) ; }
",executes a prepared statement using values supplied as arguments .,2,4,5,executes an insert query with values supplied as arguments .,3,4,5,executes a sql statement using the provided statement and return the result .,4,5,5,executes a prepared statement using update ( or certificates ) and stores the update statements .,3,4,5,execute the batch statement .,3,5,5
"public static String toString ( Reader reader , long timeout ) throws IOException { StringWriter sw = new StringWriter ( _NUM ) ; copy ( toBufferedReader ( reader ) , sw , timeout ) ; sw . close ( ) ; return sw . toString ( ) ; }
",reads string data from a reader,3,4,5,"reads a string data from the xml string , optionally closing the timeout .",4,4,5,reads string data object to a reader,3,5,5,reads string data from a reader,3,5,5,read reader from from a reader .,2,3,3
"ListBasedTokenStream ( AttributeSource attributeSource , List < AttributeSource > tokens ) { super ( attributeSource . getAttributeFactory ( ) ) ; this . tokens = tokens ; addAttributes ( attributeSource ) ; }
",creates a new listbasedtokenstream which uses the given attribute source .,3,4,5,creates a new listbasedtokenstream which wraps the attributes of the supplied shadow . only attributes will be set in sdk .,4,4,5,"creates an priority attribute list with the given attribute , using the given regular expression bundle .",3,4,5,creates a new listbasedtokenstream which uses the given attributes ( only " no cluster ) .,4,4,4,constructs a new attribute which is the provided attribute as an attribute .,2,3,3
"protected void appendText ( final String text ) { if ( text != null ) { textBody . append ( text ) ; } }
",append text to the start of the buffer .,3,5,5,"append a text , except when text is received .",3,5,5,"append text , splitting the contents of the text , and escapes the associated tag if necessary .",4,4,5,prints the text in the overview,2,5,5,append text to the body body .,2,3,3
"@ SuppressWarnings ( STRING ) public PropagationImp ( Stack < CompositeTransaction > lineage , boolean serial , long timeout ) { serial_ = serial ; lineage_ = ( Stack < CompositeTransaction > ) lineage . clone ( ) ; timeout_ = timeout ; }
",create a new instance .,2,5,5,clone a new instance with a given timeout .,3,5,5,create a new transaction for the specified amount of time .,4,5,5,create a new instance of transitioned .,2,5,5,construct a new instance with the specified detail string and exception .,4,5,5
"public void add ( String methodName , List < Expression > parameters ) { chain . add ( new DotExpressionItem ( methodName , parameters , _BOOL ) ) ; }
",add a method to the chain of methods after the chain of parameters .,3,3,5,"adds a method to the chain of methods after the dot , indicating that this segment is a property and does not need parenthesis and won ' t have paramaters .",4,4,5,add a single - item to the chain of methods after removing the parameters .,4,5,5,"add a method to the chain of methods after the dot , indicating the this segment is a list of methods and does not need a dot with a flow offset . note : this method handles a flow of the dot - > 80 .",4,5,5,add a parameterized to the list of methods that the chain does .,3,5,5
"private int calculateTotalHeight ( float starSize , int numberOfStars , float starsSeparation , boolean padding ) { return Math . round ( starSize ) + ( padding ? getPaddingTop ( ) + getPaddingBottom ( ) : _NUM ) ; }
",calculates total height to occupy based on several parameters,3,5,5,calculates total width to align width / height based on several crop set of other image,3,4,5,calculates total width to occupy based on several parameters,3,5,5,calculates total width to occupy based on several parameters,3,5,5,calculates total width to occupy based on several parameters .,3,5,5
"public void removeAction ( NetworkUpdateAction action ) { actionList . remove ( action ) ; for ( UpdateManagerListener listener : listeners ) { listener . actionRemoved ( action ) ; } }
",completely remove an action .,3,5,5,remove an action .,3,5,5,remove an action from the list .,3,5,5,completely remove an action .,3,5,5,removes remove an action from .,3,3,3
"public byte [ ] toByteArray ( ) { return Arrays . copyOf ( buf , cnt ) ; }
",creates a newly allocated byte array . its size is the current size of this output stream and the valid contents of the buffer have been copied into it .,4,5,5,safe access to the digest stored in a hash,3,5,5,safe access to the digest stored in a hash,3,5,5,returns the written bytes in a byte array . its size is the current size of this output stream .,3,3,5,gets the byte byte byte array .,2,3,2
"HttpStreamWrapper ( HttpStream stream ) throws IOException { _stream = stream ; }
",creates a new http stream wrapper .,4,5,5,creates a new timeobject object .,3,5,5,constructs a new instance of this class .,3,5,5,constructs a new stream of reflects .,3,5,5,creates a new xmlwriter plugin .,4,5,5
"public static void discard ( ) { current . remove ( ) ; }
",discards any active baggage currently in this thread,2,1,3,discards the current thread,4,4,4,discards any current entities currently in the database,3,3,4,removes the current player from being triggered in this thread .,2,3,3,discards all currently state currently in this thread .,2,2,2
"public boolean add ( symbol sym ) throws internal_error { Object previous ; not_null ( sym ) ; previous = _all . put ( sym . name ( ) , sym ) ; return previous == null ; }
",add a single symbol to the set .,3,4,4,add a symbol to the set .,3,4,4,add a symbol to the set .,3,4,4,adds a single object to the set of minidump .,2,3,3,adds the specified symbol to this adapter if .,1,1,1
"private void storePassword ( String password ) { if ( isStore && sharedState != null ) { sharedState . put ( getPwdKey ( ) , password ) ; } }
",store a password to the supplied keyboard . this method should be called after successful authentication by each individual user .,3,3,4,store password whether password will be g . this method should be called by the user that stop operations to maintain password in shared password .,2,1,1,"store current password map . this will be used when shared by the client ' s login file , choose choose choose services .",3,2,1,stores the user password and password scores into the datetimezone store . this method should be called after a password has been released from the keystore if no password could be released .,2,1,1,saves password information the state .,2,1,1
"public static long [ ] asLongArray ( final List < Long > l ) { final long [ ] a = new long [ l . size ( ) ] ; for ( int i = _NUM ; i < a . length ; i ++ ) { a [ i ] = l . get ( i ) ; } return a ; }
",return list of longs as a primitive array .,4,3,5,converts a list of longs to a primitive array .,2,3,4,return a list of longs as an array of primitive longs .,3,3,3,converts array to list of longs .,2,4,3,converts list of primitive integers as a primitive array .,1,3,3
"public boolean isExpired ( ) { return ( cookieExpiryDate != null && cookieExpiryDate . getTime ( ) <= System . currentTimeMillis ( ) ) ; }
",returns true if this cookie has expired .,2,3,3,returns true if this cookie has expired according to the time passed in .,3,4,4,returns true if this cookie has expired according to the time passed in .,3,4,4,returns true if this cookie has expired according to the time passed in .,3,4,4,returns true if this cookie has expired .,2,3,3
"public int countArray ( String [ ] array ) { return array . length ; }
",counts the count of values in an array .,3,3,3,counts how many values in the array ' s elements are stored in to the specified array .,2,2,2,"fill an already - allocated array with the values of the specified array . if the argument is null , the same size will be allocated and returned .",1,1,2,"returns a copy of the values in this array as a java . lang . values will be allocated , so that it can be allocated in the same order as the number of values specified by the array ' s iterator .",1,1,2,return the contents of the array if .,1,2,1
"public void removePhoto ( PhotoEntity photo ) { photos . remove ( photo ) ; }
",removes the given photo from this user,4,4,5,removes a new photo from this user,3,4,5,removes a photo from this user,5,5,5,removes the given photo from this user,5,5,5,removes a given photo from this user .,5,5,5
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,1,5,5,"creates an instance of the command , which will use the default dproviderinfo .",1,4,4,resolve info about a split object .,1,4,5,this is the methods that will be used for all activity with the provided activity .,1,3,4,creates an new instance of this class using .,1,3,1
"public byte [ ] readBytes ( ) throws IOException { int len = readInt ( ) ; if ( len == - _NUM ) { return null ; } byte [ ] b = DataUtils . newBytes ( len ) ; in . readFully ( b ) ; return b ; }
",read a byte array completely .,3,4,4,read bytes from the input stream .,4,5,5,read a number of bytes from the input stream .,4,5,5,read len bytes from the underlying input stream .,3,4,3,read a byte from from .,3,1,1
"public static String cutFromIndexOf ( String string , String substring ) { int i = string . indexOf ( substring ) ; if ( i != - _NUM ) { string = string . substring ( i ) ; } return string ; }
",cuts the string from the first index of provided substring to the end .,5,5,5,cuts the string from the first index of provided substring .,5,5,5,cuts the string from the first index of provided substring .,5,5,5,cuts the string from the first index of provided substring to the end .,5,5,5,cuts the string at beginning first index of provided substring .,4,4,4
"public byte [ ] serializeToBuffer ( Object o ) throws IOException { ByteArrayOutputStream bufOut = new ByteArrayOutputStream ( ) ; try { serialize ( bufOut , o ) ; bufOut . flush ( ) ; return bufOut . toByteArray ( ) ; } finally { bufOut . close ( ) ; } }
",serializes the object to a byte buffer .,4,5,5,serialize the object to a buffer .,4,5,5,serialize object to a byte array . returns the object has to be stored as a byte array .,3,2,2,converts a serialized object to a byte array .,4,5,5,serialize the object to a byte array .,4,5,5
"public void addRam ( AttackAction ea ) { pendingRams . addElement ( ea ) ; processGameEvent ( new GameNewActionEvent ( this , ea ) ) ; }
",adds a pending ramming attack to the list for this phase .,3,4,5,adds a pending displacement attack to the list for this phase .,3,4,5,adds a pending displacement attack to the list for this phase .,3,4,5,adds a pending ramming attack to the list for this phase .,3,4,5,adds a pending attack to to the list .,4,4,5
"public int read ( ) throws IOException { int val ; if ( ( val = is . read ( ) ) < _NUM ) { return - _NUM ; } if ( bo == STRING ) { val = ( char ) ( ( val << _NUM ) | ( is . read ( ) & _NUM ) ) ; } else { val = ( char ) ( ( is . read ( ) << _NUM ) | ( val & _NUM ) ) ; } return val ; }
",reads a single character .,2,5,5,reads a single integer from the stream .,3,5,5,reads characters into a character buffer and returns it as a string .,1,5,5,reads 32 char . like datainputstream . readchar except little endian .,1,1,1,reads the byte number or .,1,3,1
"public boolean equals ( Object object ) { if ( object == null || ! ( object instanceof SessionID ) ) { return _BOOL ; } SessionID another = ( SessionID ) object ; return encryptedString . equals ( another . encryptedString ) ; }
",compares this sessionid to the specified object . the result is true if and only if the argument is not null and the random string and server name are the same in both objects .,4,4,5,compares this sessionid with the specified object . the result is true if and only if the argument is not null and the random string is an objectendpoint xml document .,3,4,5,compares two policy legend . returns true if the object passed in matches the soap .,1,2,3,compares the session id for this object . the object is defined if sslv2 and extra in the spin string .,3,3,3,returns whether session name returns another specified name .,1,1,1
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,1,5,5,"creates an instance of the command , which will use the default dproviderinfo .",1,4,4,resolve info about a split object .,1,4,5,this is the methods that will be used for all activity with the provided activity .,1,3,4,creates an new instance of this class using .,1,3,1
"public ArrayList < MechSummary > generateUnits ( int num , UnitFilter filter ) { ArrayList < MechSummary > retVal = new ArrayList < > ( ) ; for ( int i = _NUM ; i < num ; i ++ ) { MechSummary ms = generateUnit ( filter ) ; if ( ms != null ) { retVal . add ( ms ) ; } } return retVal ; }
",selects a number of units from the table .,3,5,5,selects a list of units from the transition - 1 and puts the transition in the list .,1,4,4,selects a join report from the list of filter - order 0 - valued eviction .,1,3,3,performs a list of units for zoom requests .,1,3,3,loads the list of units from the list .,2,4,4
"public static String decode ( AbstractMessage msg , Boolean ext , int header ) { if ( ext == _BOOL ) { return decode ( msg ) ; } return STRING + header ; }
",return a string representation of a decoded canmessage,5,5,5,return a hex string for a decoded canmessage,2,5,5,decode a message and returns its textual representation .,5,5,5,return a string containing an occurrence of a decoded header,4,5,5,decode an header info from the header header header .,1,1,1
"public void deleteItem ( int position ) { if ( ! isDataListEmpty ( ) && position >= _NUM && position < mDataList . size ( ) ) { mDataList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
",delete an item by position,5,5,5,removes an item from the list,5,5,5,delete an item to delete,3,2,1,remove item from list,5,5,4,remove an item item the .,2,1,1
"public int size ( ) { return all . size ( ) ; }
",return the number of signers in the collection .,1,3,5,size of the set,4,4,3,size of the set,4,4,3,return the number of signers in the collection .,1,2,3,return the number of signers in the collection .,1,2,2
"public PWResetException ( String bundleName , String errCode , Object [ ] args ) { super ( bundleName , errCode , args ) ; errList = new ArrayList ( _NUM ) ; errList . add ( getMessage ( ) ) ; }
",creates a password reset exception object .,4,5,5,creates a formatted exception object,3,5,5,creates a new instance of decoder,1,5,5,creates a password reset exception object .,4,5,5,creates a new instance exception instance .,2,1,1
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,5,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",4,1,3,check if a given string is a integer .,1,5,5,"return true if this type is a string , false otherwise .",5,5,5,return true if this type is to as as or .,1,1,1
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,1,2,2,waits for the request to highlight the locator .,1,4,4,waits for the node to have expired .,1,4,4,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",3,2,2,handles the request request request request request request request request request request used request .,1,1,1
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,5,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,3,3,4,returns a new charseq with the same content,2,5,5,"returns a new charseq whose value is this charseq , with the given string",2,3,4,returns a with given given string .,2,1,1
"private static MappingObject ObjectAt ( PCalLocation loc , MappingObject [ ] [ ] map ) { return map [ loc . getLine ( ) ] [ loc . getColumn ( ) ] ; }
",location of object array loc .,3,2,1,"mapping between two double at the beginning of the specified line , where the last element is already null .",1,2,2,return a mapping as per object,3,4,4,"it uses the mapping to find location ( i . e . , the line - forward ) .",1,2,1,convert the mapping distance the index from the the to the the .,1,1,1
"protected void handle ( Exception exception , String title , String message ) { Utils . handleError ( getShell ( ) , exception , title , message ) ; }
",handle the specified error .,5,5,5,handles any exception that is thrown when processing a oauth2 authorization request .,3,2,2,handles a mini - language validation error .,1,1,1,handles an exception that occurred during the user .,3,4,4,handles an error error with a error box .,3,1,1
"private void evaluatePopup ( MouseEvent e ) { if ( e . isPopupTrigger ( ) ) { JPopupMenu menu = createBookmarkPopupMenu ( ) ; if ( menu != null ) { menu . show ( this , e . getX ( ) , e . getY ( ) ) ; } } }
","if this is a popup trigger , this method should call to check if the popup triggers and it is a popup menu depending on the mouse event .",4,2,3,evaluate the popup menu for the event .,4,5,5,called at potential popup triggers .,2,5,5,called at potential popup triggers .,2,5,5,attach the the given popup menu menu a popup menu menu menu the menu menu menu .,3,1,1
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,3,3,4,safe to convert the string representation for a short value .,1,4,4,this method converts charset ' s asap letter to their string representation .,3,4,4,returns oid for algname,3,3,4,returns oid code algname .,2,3,4
"private void updateLineList ( ) { if ( horizontalLineRadiobutton . isSelected ( ) ) { setHorizontalLineSelected ( ) ; } else { setVerticalLineSelected ( ) ; } updateButtonStates ( ) ; }
",updates the previous line .,3,5,5,set the select button of the horizontal .,3,5,5,sets the line from the list ( if any ) and sets them to the current selection .,3,5,5,updates the background of the card buttons depending on the current selected line .,4,5,5,ensures the visible button of the that .,1,2,1
"public void replaceSplitElement ( int aIndex , Fragment aSplitElement ) { splits . set ( aIndex , aSplitElement ) ; }
",split split element by beginning,1,1,1,replaces an element at the beginning with the specified element,3,5,5,"replace an existing one interior instance with the elements of the list , and if it ' s in the new one .",1,2,3,"adds a split element to the beginning instruction this is trying to store trying the index for the formula . typically , store the element tree rooted at the index .",1,1,1,splits the split of in the but .,1,1,1
"private static int numInitialSplits ( long numRecords ) { final int maxSplits = _NUM ; final long recordsPerSplit = _NUM ; return ( int ) Math . min ( maxSplits , numRecords / recordsPerSplit + _NUM ) ; }
",compute the number of records in the specified number of searchfor .,3,3,3,uses a split number of attempts to make the main measurement selection note that the number of times the number of isolated isolated can occur .,1,1,1,calculates the number of rules that can be easily used later on any other export ( this is necessary for the given snapshot ) .,1,3,4,returns the largest power of two formatted that have the given size .,1,3,3,returns the total of records record in in range record in records .,1,1,1
"protected void markUsed ( Entry entry ) { entry . lastUsed = System . nanoTime ( ) ; }
",mark entry as activated by use it to make sure that a connection is activated .,5,5,5,mark the current node as follows .,3,5,5,mark the entry as separated by the currently collected key .,3,5,5,mark the stream as soon as we fail .,1,5,5,starts the entry entry .,2,5,5
"private < T > UnaryOperator < T > compose ( UnaryOperator < T > before , UnaryOperator < T > after ) { return null ; }
","compose a stream of functions into a single function , which applies each one after the other",5,5,5,"create a function after a side function of mapping , which applies each batch of a batch operator after the other operator has been applied , which is a mix function .",5,5,5,a function to compose one - hand functions of a ' before ',3,5,5,"tries to locate a stream of the given function which is , returning null .",4,5,5,todo the operations of as a function function which .,2,2,2
"private boolean hasNext ( Pattern pattern ) { if ( ! hasNext ( ) ) { return _BOOL ; } Matcher matcher = pattern . matcher ( gserValue . substring ( pos , length ) ) ; return matcher . find ( ) ; }
",returns true if the input matches the given pattern .,5,5,5,skips the next iff the parser has at the given position in the pattern .,3,5,5,returns true if the given pattern contains at least one item in the given pattern,4,5,5,returns true if the input matched the given pattern has a point in the document .,3,5,5,determines if the given token is is the given pattern .,4,2,2
"public static < R , A , B > CompletionStage < R > combine ( CompletionStage < A > a , CompletionStage < B > b , BiFunction < A , B , R > function ) { return a . thenCombine ( b , function ) ; }
",combine a function into a function .,3,5,4,the function should be supplied as the result of applying two values . the function finds each byte using a treeset function and the results from the original function and and returns the result .,4,5,5,this function takes a single function representation as the first pass of a function,5,5,5,this function is called to be a bridge - b / c connected to a single distribution,4,5,5,this the of of a a single that .,1,1,1
"public StreamInfoManager ( TwitchApi api , StreamInfoListener listener ) { this . listener = listener ; this . api = api ; pendingRequests = new HashMap < > ( ) ; invalidStreamInfo = new StreamInfo ( STRING , listener ) ; invalidStreamInfo . setRequested ( ) ; }
",creates a stream object .,5,5,5,creates a new instance with the specified api .,2,5,5,create a new instance of this class .,2,5,5,initializing for the target listener with the information supplied in the client .,4,5,5,create a new instance .,2,5,5
"public Sentence asSentence ( ) { return Sentence . newConjunction ( sentences ) ; }
",returns a sentence sentence from the annotation .,2,4,4,convert the sentence into its sub - model .,4,5,5,returns a structuredtranslation of the structure .,3,5,5,returns a conjunction of conjuncts .,4,4,5,return the sentence of sentence on the sentence .,2,1,2
"public boolean isPronoun ( ) { return typeString . contains ( SUFFIX_PRONOUN ) ; }
",determine if the expression is a tree .,4,5,5,determine if the expression is some fluid .,5,5,5,determine if the expression is some fluid .,5,5,5,determine if the expression is some food .,1,5,5,determine if the expression is a regular expression .,2,5,5
"KeyStoreState ( ) { }
",create a new empty keystore,5,5,5,create new empty state store instance .,5,5,5,construct new empty keystore,5,5,5,create a new empty keystore for the state of an unsaved journal,2,5,5,creates new instance message of .,2,5,3
"private static boolean isInNeedOfForm ( UIComponent component ) { return ( component instanceof ActionSource || component instanceof ActionSource2 || component instanceof EditableValueHolder ) ; }
",determines whether a component is an action .,4,5,5,determine if the given action is source .,2,5,5,determines if the component of the component represents the given component and the component components .,2,1,1,check if the component is in the preview component .,2,5,5,determine a bigdecimal check determine button the component area .,2,5,5
"public Node ( Coordinate pt ) { this ( pt , new DirectedEdgeStar ( ) ) ; }
",creates a new rotate node with a unique capacity .,4,5,5,creates a copy of the focus,2,5,4,"creates a new , and specifies the polygon for the given node .",3,5,5,creates a new edge edge with the given node .,3,4,4,creates a new instance the given location .,4,5,5
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the intersection size of two bitsets .,5,5,5
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,3,5,5,outputs a description of one attribute .,2,5,5,returns a text attribute list ( ) that is represented by a small string .,3,5,5,returns a description of this attribute and the auto - string describing a ring of the class and values .,4,5,5,returns optimal text text of .,1,1,2
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide rounding negative rounding mode .,5,5,5
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,1,4,3,kills a specific player .,2,5,5,"start tom , no longer used .",1,5,1,removes an storage range from items,4,5,5,remove an exit status status status the status status .,2,1,1
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",2,2,4,determine the level of the given level,4,4,4,"return the index to fit the given level , replacing all transfers of the old edge to the new level",5,5,5,multiplies = max + max level,2,5,5,checks the not minimum for .,2,4,2
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,3,5,5,emits a string entry to a log file in the local cache that contains the specified entry .,2,5,4,inserts an entry into the disk cache .,5,5,5,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,2,5,5,internal snapshot of and local local file and and and and .,1,1,1
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,3,5,5,back from the queue < p > json object can be called after the stop is committed,2,5,5,update the view from the json and fill the given inputs,5,5,5,set the uninitialized state of uninitialized requests,2,5,5,computes the media object the page page if .,1,3,2
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,5,5,5,creates a new instance .,5,5,5,creates a new instance .,5,5,5,creates a new instance .,5,5,5,creates an new instance of this class using .,5,5,5
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a arguments .,5,5,5
"public RepeatedFieldBuilder < MType , BType , IType > addMessage ( MType message ) { if ( message == null ) { throw new NullPointerException ( ) ; } ensureMutableMessageList ( ) ; messages . add ( message ) ; if ( builders != null ) { builders . add ( null ) ; } onChanged ( ) ; incrementModCounts ( ) ; return this ; }
",appends the specified element to the end of this list .,5,5,5,appends the specified element to the end of this list .,5,5,5,appends the specified element to the end of this list .,5,5,5,"appends the specified element to the end of this list , if the element is not already present .",5,5,5,appends the specified element to the end of this list .,5,5,5
"private static boolean checkValue ( String val ) throws MalformedObjectNameException { if ( val == null ) throw new NullPointerException ( STRING ) ; final int len = val . length ( ) ; if ( len == _NUM ) return _BOOL ; final char [ ] s = val . toCharArray ( ) ; final int [ ] result = parseValue ( s , _NUM ) ; final int endValue = result [ _NUM ] ; final boolean value_pattern = result [ _NUM ] == _NUM ; if ( endValue < len ) throw new MalformedObjectNameException ( STRING + s [ endValue ] + STRING ) ; return value_pattern ; }
",check the value of the two strings . the following value is within the # ( ) method,4,5,5,checks that a given string value is either .,3,5,4,check that the value is a valid pattern string .,5,5,5,parse a value in the form " or value of an object,2,5,4,matches the the specified value matches the valid integer .,3,4,3
"public void remove ( ) throws RecurrenceInfoException { List < RecurrenceRule > rulesList = new ArrayList < RecurrenceRule > ( ) ; rulesList . addAll ( rRulesList ) ; rulesList . addAll ( eRulesList ) ; try { for ( RecurrenceRule rule : rulesList ) rule . remove ( ) ; info . remove ( ) ; } catch ( RecurrenceRuleException rre ) { throw new RecurrenceInfoException ( rre . getMessage ( ) , rre ) ; } catch ( GenericEntityException gee ) { throw new RecurrenceInfoException ( gee . getMessage ( ) , gee ) ; } }
",removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5,removes the recurrence from persistant store .,5,5,5
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the intersection size of two bitsets .,5,5,5
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,3,5,5,outputs a description of one attribute .,2,5,5,returns a text attribute list ( ) that is represented by a small string .,3,5,5,returns a description of this attribute and the auto - string describing a ring of the class and values .,4,5,5,returns optimal text text of .,1,1,2
"private static boolean isDoubleEqual ( double value , double valueToCompare ) { return ( Math . abs ( value - valueToCompare ) < _NUM ) ; }
",verifies that the double value is equal to the given double . if the double value is not finite as a negative number .,3,5,4,returns true if the value is a " decimal " double to the given double value .,3,5,5,check if double value is equal to the tail,5,5,5,returns true if the given value is equal to this minimum function .,2,5,5,this if value present value to needed to .,3,5,5
"public void testIntValuePos ( ) { String a = STRING ; BigDecimal aNumber = new BigDecimal ( a ) ; int result = - _NUM ; assertTrue ( STRING , aNumber . intValue ( ) == result ) ; }
",integer value of a positive bigdecimal,5,5,5,integer value of a positive bigdecimal,5,5,5,integer value of a positive bigdecimal,5,5,5,integer value of a positive bigdecimal,5,5,5,integer value of a negative bigdecimal .,5,5,5
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5
"public static Object [ ] ordinalArray ( TupleSet tuples , String field ) { return ordinalArray ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
",get a sorted array containing all column values for a given tuple iterator and field .,4,5,4,get a sorted array containing all column values for a given tuple iterator and field .,4,5,4,get a sorted array containing all column values for a given tuple iterator and field .,4,5,4,get a sorted array containing all column values for a given tuple iterator and field .,4,5,4,get a sorted array containing all column values for a given tuple iterator .,4,5,4
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,5,4,5,divide with invalid rounding mode,5,4,5,divide with invalid rounding mode,5,4,5,divide with invalid rounding mode,5,4,5,divide rounding negative rounding mode .,5,4,5
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,5,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",4,4,2,check if a given string is a integer .,2,5,5,"return true if this type is a string , false otherwise .",3,3,5,return true if this type is to as as or .,1,2,1
"private void validateSqlStatement ( String sql , int jdbcStatementIndex ) { Assert . isTrue ( StringUtils . isNotBlank ( sql ) , STRING + jdbcStatementIndex + STRING ) ; }
",validate if the jni statement is not valid,2,5,4,validate the given sql statement in the database .,5,5,5,check if sql statement .,2,4,3,"validates the given sql statement and adds statements to the expected parameters . if the sql string is not empty , it will be an exception .",3,4,4,check if passed statement statement entry any statement is the database .,2,3,2
"public static Long [ ] valuesOf ( long [ ] array ) { Long [ ] dest = new Long [ array . length ] ; for ( int i = _NUM ; i < array . length ; i ++ ) { dest [ i ] = Long . valueOf ( array [ i ] ) ; } return dest ; }
",converts to object array .,4,5,4,converts to object array .,4,5,4,converts to object array .,4,5,4,converts to object array .,4,5,4,converts to byte array .,4,5,4
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,1,4,4,kills a specific player .,1,5,5,"start tom , no longer used .",1,4,3,removes an storage range from items,2,4,4,remove an exit status status status the status status .,1,1,1
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",1,3,3,determine the level of the given level,3,4,3,"return the index to fit the given level , replacing all transfers of the old edge to the new level",1,2,1,multiplies = max + max level,1,4,3,checks the not minimum for .,1,3,1
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,3,5,4,emits a string entry to a log file in the local cache that contains the specified entry .,3,4,3,inserts an entry into the disk cache .,2,4,3,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,3,3,3,internal snapshot of and local local file and and and and .,2,2,1
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public boolean boundScroll ( ) { float curScroll = getStackScroll ( ) ; float newScroll = getBoundedStackScroll ( curScroll ) ; if ( Float . compare ( newScroll , curScroll ) != _NUM ) { setStackScroll ( newScroll ) ; return _BOOL ; } return _BOOL ; }
","bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,4,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,4,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,4,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,4,5,bounds the current scroll if necessary but .,3,4,3
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,3,3,4,waits for the request to highlight the locator .,4,5,4,waits for the node to have expired .,2,5,3,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",1,3,3,handles the request request request request request request request request request request used request .,1,1,1
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,4,4,3,back from the queue < p > json object can be called after the stop is committed,1,2,2,update the view from the json and fill the given inputs,5,5,5,set the uninitialized state of uninitialized requests,3,5,3,computes the media object the page page if .,2,4,4
"public void addSeriesRenderer ( int index , SimpleSeriesRenderer renderer ) { mRenderers . add ( index , renderer ) ; }
",adds a simple renderer to the multiple renderer .,5,5,5,adds a simple renderer to the multiple renderer .,5,5,5,adds a simple renderer to the multiple renderer .,5,5,5,adds a simple renderer to the multiple renderer .,5,5,5,adds a simple renderer to the multiple renderer .,5,5,5
"private float calcAngle ( float value ) { return value / mData . getYValueSum ( ) * _NUM ; }
",calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value .,5,5,5
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates an new instance of this class using .,3,4,5
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,4,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,5,3,4,returns a new charseq with the same content,1,5,5,"returns a new charseq whose value is this charseq , with the given string",5,5,5,returns a with given given string .,2,3,3
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a throwable .,5,5,5,formats and logs a message with a arguments .,5,5,5
"public static String decodeCharset ( String s , String charset ) { if ( s == null ) { return null ; } try { byte buf [ ] = s . getBytes ( ASCII_CHARSET ) ; return ( new String ( buf , _NUM , buf . length , charset ) ) ; } catch ( UnsupportedEncodingException uee ) { return s ; } }
","decodes ' s basic encoding - encoded octets in ' % ' , using the specified encoding .",3,5,4,decodes data in the specified string using the utf - 8 scheme .,5,5,5,decode a string that looks like " % 25 " and two - character escapes " . the platform is converted to the character encoding .,3,3,3,"decodes a byte array into its string , using the specified encoding as specified by the base64 encoding . escaped characters are converted back to their original representation .",2,3,3,converts the contents that an string using .,2,3,3
"public void addRestrictedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( restrictedDomains == null ) { restrictedDomains = new ArrayList < > ( ) ; } restrictedDomains . add ( domainName ) ; }
",adds specified domain name to the list of restricted domains,5,5,5,adds specified domain name to the list of restricted domains,5,5,5,adds specified domain name to the list of restricted domains,5,5,5,add specified domain name to the list of permitted domains,5,5,5,adds a sub name to the sub of sub sub sub .,2,4,2
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,5,5,5,safe to convert the string representation for a short value .,1,4,4,this method converts charset ' s asap letter to their string representation .,1,3,4,returns oid for algname,5,5,5,returns oid code algname .,5,5,5
"public void fireAnnotationSelected ( WorkflowAnnotation anno ) { List < WorkflowAnnotation > list = new LinkedList < > ( ) ; list . add ( anno ) ; fireAnnotationsChanged ( AnnotationEvent . SELECTED_ANNOTATION_CHANGED , list ) ; }
",fire when an annotation has been selected .,5,4,5,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,fire when the something minor with workflow annotations has changed which only requires a repaint .,3,1,3,update when an annotation has been moved ie .,3,4,4
"public AwsIotConnection ( AbstractAwsIotClient client ) { this . client = client ; }
",creates a new connection .,3,5,5,creates a new connection with one byte compaction as a client side .,3,2,4,creates a new red5 object to acquire the specified client .,3,4,3,create a client with the server,4,5,5,resets a client client .,2,5,5
"public MetaDataColumnDescriptor ( String columnName , int jdbcType , Object defaultValue ) { _columnName = columnName . toUpperCase ( ) ; _jdbcType = jdbcType ; _defaultValue = defaultValue ; }
",creates a new lob .,2,5,3,create a standard java representation of a field .,1,5,5,create a tracerunnable object that can be used to look up the specified name .,1,4,4,returns a new exemption variable ordinary from upper case in readresponse ( no limit ) .,1,3,4,constructs a new object .,2,5,5
"public void add ( IPoint pt ) { if ( inProgress ) { throw new ConcurrentModificationException ( STRING ) ; } points . add ( pt ) ; }
",add point to the partial hull .,4,5,5,adds points to the partial hull .,4,5,4,add the given point .,3,5,5,add a point to the end of the polygon,4,3,4,add given at given given set and .,1,1,1
"public static Date parseText ( String dateStr ) { try { return mSimpleTextFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( STRING ) ; } }
",parse string to datetime,4,5,4,parse the given string into date object,5,5,3,parse string to date,4,5,4,parse string to date,4,5,4,parse string to datetime .,4,5,4
"public void addMessageObserver ( final MessageObserver observer ) { if ( observer == null ) { throw new NullPointerException ( ) ; } else if ( messageObservers == null ) { initMessageObserverList ( ) ; } messageObservers . add ( observer ) ; }
",adds the specified message observer .,5,5,5,adds the specified message to this message ' s list .,5,3,5,appends a message to this message .,3,4,3,adds a message to this rendered ' s platform .,2,4,4,adds an provided message observer to .,3,3,2
"protected final void updateBorderText ( final String text ) { Preconditions . checkNotNull ( text , STRING ) ; m_titledBorder . setTitle ( text ) ; updateUI ( ) ; }
",updates the border text of the text .,5,3,4,updates the border text based on the text of the control .,5,2,4,updates the cursor text about the phonetic text .,3,4,4,updates the border text according to the updating of the component .,5,3,3,updates and text with as a text .,2,2,1
"public void addColumn ( int idx , Column column ) { if ( column != null ) { columns . add ( idx , column ) ; } }
",adds a new column at the specified position .,4,5,5,adds a new column to the table .,4,5,5,adds a column at the given position .,5,5,5,adds a new column to the set of columns . this is used when the column has been created .,5,2,4,adds a column column to the table position .,5,3,3
"private Member nextMember ( Member . Type type ) { return new TestMember ( type , new Address ( STRING , ++ port ) , new Address ( STRING , port + _NUM ) ) ; }
",returns the next member reference .,5,4,4,get a member member .,3,4,3,returns a new member of the type ( including the tokenizer defined ) .,2,2,3,returns the specified object returns the sales .,3,3,3,returns the member member .,3,4,3
"protected int executePrepareStatement ( List < Column > columns , PreparedStatement statement ) throws SQLException { int bindNo = _NUM ; for ( Column c : columns ) { setColumnValue ( statement , bindNo , c ) ; bindNo ++ ; } return statement . executeUpdate ( ) ; }
",executes a prepared statement using values supplied as arguments .,3,4,4,executes an insert query with values supplied as arguments .,3,2,2,executes a sql statement using the provided statement and return the result .,2,3,3,executes a prepared statement using update ( or certificates ) and stores the update statements .,1,2,2,execute the batch statement .,2,3,3
"public static String toString ( Reader reader , long timeout ) throws IOException { StringWriter sw = new StringWriter ( _NUM ) ; copy ( toBufferedReader ( reader ) , sw , timeout ) ; sw . close ( ) ; return sw . toString ( ) ; }
",reads string data from a reader,4,4,5,"reads a string data from the xml string , optionally closing the timeout .",2,3,3,reads string data object to a reader,3,4,5,reads string data from a reader,4,4,5,read reader from from a reader .,1,1,1
"ListBasedTokenStream ( AttributeSource attributeSource , List < AttributeSource > tokens ) { super ( attributeSource . getAttributeFactory ( ) ) ; this . tokens = tokens ; addAttributes ( attributeSource ) ; }
",creates a new listbasedtokenstream which uses the given attribute source .,4,4,5,creates a new listbasedtokenstream which wraps the attributes of the supplied shadow . only attributes will be set in sdk .,4,5,5,"creates an priority attribute list with the given attribute , using the given regular expression bundle .",2,3,3,creates a new listbasedtokenstream which uses the given attributes ( only " no cluster ) .,3,4,5,constructs a new attribute which is the provided attribute as an attribute .,2,3,3
"protected void appendText ( final String text ) { if ( text != null ) { textBody . append ( text ) ; } }
",append text to the start of the buffer .,4,4,5,"append a text , except when text is received .",2,3,3,"append text , splitting the contents of the text , and escapes the associated tag if necessary .",3,3,4,prints the text in the overview,2,3,4,append text to the body body .,2,3,1
"@ SuppressWarnings ( STRING ) public PropagationImp ( Stack < CompositeTransaction > lineage , boolean serial , long timeout ) { serial_ = serial ; lineage_ = ( Stack < CompositeTransaction > ) lineage . clone ( ) ; timeout_ = timeout ; }
",create a new instance .,4,4,4,clone a new instance with a given timeout .,2,3,3,create a new transaction for the specified amount of time .,3,3,4,create a new instance of transitioned .,3,4,4,construct a new instance with the specified detail string and exception .,2,3,3
"public void add ( String methodName , List < Expression > parameters ) { chain . add ( new DotExpressionItem ( methodName , parameters , _BOOL ) ) ; }
",add a method to the chain of methods after the chain of parameters .,2,3,3,"adds a method to the chain of methods after the dot , indicating that this segment is a property and does not need parenthesis and won ' t have paramaters .",3,4,4,add a single - item to the chain of methods after removing the parameters .,2,3,3,"add a method to the chain of methods after the dot , indicating the this segment is a list of methods and does not need a dot with a flow offset . note : this method handles a flow of the dot - > 80 .",4,3,4,add a parameterized to the list of methods that the chain does .,2,3,4
"private int calculateTotalHeight ( float starSize , int numberOfStars , float starsSeparation , boolean padding ) { return Math . round ( starSize ) + ( padding ? getPaddingTop ( ) + getPaddingBottom ( ) : _NUM ) ; }
",calculates total height to occupy based on several parameters,5,4,5,calculates total width to align width / height based on several crop set of other image,2,3,3,calculates total width to occupy based on several parameters,2,3,4,calculates total width to occupy based on several parameters,3,4,3,calculates total width to occupy based on several parameters .,4,2,3
"public void removeAction ( NetworkUpdateAction action ) { actionList . remove ( action ) ; for ( UpdateManagerListener listener : listeners ) { listener . actionRemoved ( action ) ; } }
",completely remove an action .,5,5,5,remove an action .,4,5,5,remove an action from the list .,4,5,5,completely remove an action .,5,5,5,removes remove an action from .,2,2,3
"public byte [ ] toByteArray ( ) { return Arrays . copyOf ( buf , cnt ) ; }
",creates a newly allocated byte array . its size is the current size of this output stream and the valid contents of the buffer have been copied into it .,2,3,3,safe access to the digest stored in a hash,3,4,4,safe access to the digest stored in a hash,2,3,4,returns the written bytes in a byte array . its size is the current size of this output stream .,4,4,4,gets the byte byte byte array .,2,2,1
"HttpStreamWrapper ( HttpStream stream ) throws IOException { _stream = stream ; }
",creates a new http stream wrapper .,5,5,5,creates a new timeobject object .,2,3,3,constructs a new instance of this class .,3,3,3,constructs a new stream of reflects .,2,3,4,creates a new xmlwriter plugin .,3,4,3
"public static void discard ( ) { current . remove ( ) ; }
",discards any active baggage currently in this thread,2,3,3,discards the current thread,4,4,4,discards any current entities currently in the database,3,2,3,removes the current player from being triggered in this thread .,3,4,4,discards all currently state currently in this thread .,4,5,5
"public boolean add ( symbol sym ) throws internal_error { Object previous ; not_null ( sym ) ; previous = _all . put ( sym . name ( ) , sym ) ; return previous == null ; }
",add a single symbol to the set .,5,4,4,add a symbol to the set .,5,5,5,add a symbol to the set .,5,5,5,adds a single object to the set of minidump .,2,3,3,adds the specified symbol to this adapter if .,3,3,4
"private void storePassword ( String password ) { if ( isStore && sharedState != null ) { sharedState . put ( getPwdKey ( ) , password ) ; } }
",store a password to the supplied keyboard . this method should be called after successful authentication by each individual user .,2,3,4,store password whether password will be g . this method should be called by the user that stop operations to maintain password in shared password .,3,3,4,"store current password map . this will be used when shared by the client ' s login file , choose choose choose services .",2,2,2,stores the user password and password scores into the datetimezone store . this method should be called after a password has been released from the keystore if no password could be released .,2,2,4,saves password information the state .,5,5,5
"public static long [ ] asLongArray ( final List < Long > l ) { final long [ ] a = new long [ l . size ( ) ] ; for ( int i = _NUM ; i < a . length ; i ++ ) { a [ i ] = l . get ( i ) ; } return a ; }
",return list of longs as a primitive array .,4,4,5,converts a list of longs to a primitive array .,4,5,5,return a list of longs as an array of primitive longs .,4,5,4,converts array to list of longs .,2,3,3,converts list of primitive integers as a primitive array .,3,4,3
"public boolean isExpired ( ) { return ( cookieExpiryDate != null && cookieExpiryDate . getTime ( ) <= System . currentTimeMillis ( ) ) ; }
",returns true if this cookie has expired .,2,3,3,returns true if this cookie has expired according to the time passed in .,3,4,4,returns true if this cookie has expired according to the time passed in .,2,3,4,returns true if this cookie has expired according to the time passed in .,3,4,4,returns true if this cookie has expired .,4,3,4
"public int countArray ( String [ ] array ) { return array . length ; }
",counts the count of values in an array .,2,3,3,counts how many values in the array ' s elements are stored in to the specified array .,5,5,5,"fill an already - allocated array with the values of the specified array . if the argument is null , the same size will be allocated and returned .",4,5,5,"returns a copy of the values in this array as a java . lang . values will be allocated , so that it can be allocated in the same order as the number of values specified by the array ' s iterator .",2,3,3,return the contents of the array if .,2,3,4
"public void removePhoto ( PhotoEntity photo ) { photos . remove ( photo ) ; }
",removes the given photo from this user,3,4,4,removes a new photo from this user,2,3,3,removes a photo from this user,5,5,5,removes the given photo from this user,2,3,3,removes a given photo from this user .,3,4,4
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,2,3,3,"creates an instance of the command , which will use the default dproviderinfo .",2,3,4,resolve info about a split object .,4,5,5,this is the methods that will be used for all activity with the provided activity .,2,3,4,creates an new instance of this class using .,2,3,3
"public byte [ ] readBytes ( ) throws IOException { int len = readInt ( ) ; if ( len == - _NUM ) { return null ; } byte [ ] b = DataUtils . newBytes ( len ) ; in . readFully ( b ) ; return b ; }
",read a byte array completely .,3,4,4,read bytes from the input stream .,2,3,3,read a number of bytes from the input stream .,3,4,4,read len bytes from the underlying input stream .,5,5,5,read a byte from from .,1,1,1
"public static String cutFromIndexOf ( String string , String substring ) { int i = string . indexOf ( substring ) ; if ( i != - _NUM ) { string = string . substring ( i ) ; } return string ; }
",cuts the string from the first index of provided substring to the end .,4,5,5,cuts the string from the first index of provided substring .,4,5,5,cuts the string from the first index of provided substring .,4,5,5,cuts the string from the first index of provided substring to the end .,4,5,5,cuts the string at beginning first index of provided substring .,4,5,5
"public byte [ ] serializeToBuffer ( Object o ) throws IOException { ByteArrayOutputStream bufOut = new ByteArrayOutputStream ( ) ; try { serialize ( bufOut , o ) ; bufOut . flush ( ) ; return bufOut . toByteArray ( ) ; } finally { bufOut . close ( ) ; } }
",serializes the object to a byte buffer .,3,4,4,serialize the object to a buffer .,4,4,4,serialize object to a byte array . returns the object has to be stored as a byte array .,2,3,3,converts a serialized object to a byte array .,3,3,4,serialize the object to a byte array .,2,3,3
"public void addRam ( AttackAction ea ) { pendingRams . addElement ( ea ) ; processGameEvent ( new GameNewActionEvent ( this , ea ) ) ; }
",adds a pending ramming attack to the list for this phase .,5,5,5,adds a pending displacement attack to the list for this phase .,2,3,3,adds a pending displacement attack to the list for this phase .,2,2,3,adds a pending ramming attack to the list for this phase .,3,4,4,adds a pending attack to to the list .,2,3,3
"public int read ( ) throws IOException { int val ; if ( ( val = is . read ( ) ) < _NUM ) { return - _NUM ; } if ( bo == STRING ) { val = ( char ) ( ( val << _NUM ) | ( is . read ( ) & _NUM ) ) ; } else { val = ( char ) ( ( is . read ( ) << _NUM ) | ( val & _NUM ) ) ; } return val ; }
",reads a single character .,1,3,3,reads a single integer from the stream .,2,3,4,reads characters into a character buffer and returns it as a string .,2,3,3,reads 32 char . like datainputstream . readchar except little endian .,4,5,5,reads the byte number or .,2,3,3
"public boolean equals ( Object object ) { if ( object == null || ! ( object instanceof SessionID ) ) { return _BOOL ; } SessionID another = ( SessionID ) object ; return encryptedString . equals ( another . encryptedString ) ; }
",compares this sessionid to the specified object . the result is true if and only if the argument is not null and the random string and server name are the same in both objects .,4,4,5,compares this sessionid with the specified object . the result is true if and only if the argument is not null and the random string is an objectendpoint xml document .,5,4,5,compares two policy legend . returns true if the object passed in matches the soap .,1,2,2,compares the session id for this object . the object is defined if sslv2 and extra in the spin string .,2,3,3,returns whether session name returns another specified name .,2,3,3
"public ActivityResolveInfo ( ResolveInfo resolveInfo ) { this . resolveInfo = resolveInfo ; }
",creates a new activity .,4,4,4,"creates an instance of the command , which will use the default dproviderinfo .",2,3,3,resolve info about a split object .,2,3,4,this is the methods that will be used for all activity with the provided activity .,2,2,2,creates an new instance of this class using .,5,5,5
"public ArrayList < MechSummary > generateUnits ( int num , UnitFilter filter ) { ArrayList < MechSummary > retVal = new ArrayList < > ( ) ; for ( int i = _NUM ; i < num ; i ++ ) { MechSummary ms = generateUnit ( filter ) ; if ( ms != null ) { retVal . add ( ms ) ; } } return retVal ; }
",selects a number of units from the table .,1,2,4,selects a list of units from the transition - 1 and puts the transition in the list .,2,3,3,selects a join report from the list of filter - order 0 - valued eviction .,2,3,4,performs a list of units for zoom requests .,4,5,5,loads the list of units from the list .,2,3,3
"public static String decode ( AbstractMessage msg , Boolean ext , int header ) { if ( ext == _BOOL ) { return decode ( msg ) ; } return STRING + header ; }
",return a string representation of a decoded canmessage,4,4,4,return a hex string for a decoded canmessage,2,2,3,decode a message and returns its textual representation .,2,2,4,return a string containing an occurrence of a decoded header,3,4,4,decode an header info from the header header header .,2,2,1
"public void deleteItem ( int position ) { if ( ! isDataListEmpty ( ) && position >= _NUM && position < mDataList . size ( ) ) { mDataList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
",delete an item by position,5,5,5,removes an item from the list,2,3,4,delete an item to delete,2,2,3,remove item from list,2,2,2,remove an item item the .,2,3,2
"public int size ( ) { return all . size ( ) ; }
",return the number of signers in the collection .,4,4,4,size of the set,5,5,5,size of the set,5,5,5,return the number of signers in the collection .,4,4,4,return the number of signers in the collection .,4,4,4
"public PWResetException ( String bundleName , String errCode , Object [ ] args ) { super ( bundleName , errCode , args ) ; errList = new ArrayList ( _NUM ) ; errList . add ( getMessage ( ) ) ; }
",creates a password reset exception object .,2,2,4,creates a formatted exception object,4,4,4,creates a new instance of decoder,2,2,3,creates a password reset exception object .,1,1,2,creates a new instance exception instance .,2,2,3
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,4,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",3,5,5,check if a given string is a integer .,1,5,5,"return true if this type is a string , false otherwise .",5,5,5,return true if this type is to as as or .,1,3,2
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,4,4,5,waits for the request to highlight the locator .,5,5,5,waits for the node to have expired .,4,5,5,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",3,3,3,handles the request request request request request request request request request request used request .,3,1,1
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,5,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,2,3,5,returns a new charseq with the same content,1,5,5,"returns a new charseq whose value is this charseq , with the given string",5,4,3,returns a with given given string .,3,3,2
"private static MappingObject ObjectAt ( PCalLocation loc , MappingObject [ ] [ ] map ) { return map [ loc . getLine ( ) ] [ loc . getColumn ( ) ] ; }
",location of object array loc .,3,5,5,"mapping between two double at the beginning of the specified line , where the last element is already null .",2,3,5,return a mapping as per object,5,5,5,"it uses the mapping to find location ( i . e . , the line - forward ) .",2,3,5,convert the mapping distance the index from the the to the the .,2,2,1
"protected void handle ( Exception exception , String title , String message ) { Utils . handleError ( getShell ( ) , exception , title , message ) ; }
",handle the specified error .,3,5,5,handles any exception that is thrown when processing a oauth2 authorization request .,4,4,5,handles a mini - language validation error .,4,5,5,handles an exception that occurred during the user .,5,5,5,handles an error error with a error box .,3,3,2
"private void evaluatePopup ( MouseEvent e ) { if ( e . isPopupTrigger ( ) ) { JPopupMenu menu = createBookmarkPopupMenu ( ) ; if ( menu != null ) { menu . show ( this , e . getX ( ) , e . getY ( ) ) ; } } }
","if this is a popup trigger , this method should call to check if the popup triggers and it is a popup menu depending on the mouse event .",5,3,5,evaluate the popup menu for the event .,4,5,5,called at potential popup triggers .,3,5,5,called at potential popup triggers .,3,5,5,attach the the given popup menu menu a popup menu menu menu the menu menu menu .,2,2,1
"public static String map2OID ( String algName ) { return alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; }
",returns oid for algname,5,5,5,safe to convert the string representation for a short value .,3,5,5,this method converts charset ' s asap letter to their string representation .,3,3,5,returns oid for algname,5,5,5,returns oid code algname .,2,5,3
"private void updateLineList ( ) { if ( horizontalLineRadiobutton . isSelected ( ) ) { setHorizontalLineSelected ( ) ; } else { setVerticalLineSelected ( ) ; } updateButtonStates ( ) ; }
",updates the previous line .,3,5,5,set the select button of the horizontal .,2,5,5,sets the line from the list ( if any ) and sets them to the current selection .,4,4,5,updates the background of the card buttons depending on the current selected line .,3,4,5,ensures the visible button of the that .,2,5,5
"public void replaceSplitElement ( int aIndex , Fragment aSplitElement ) { splits . set ( aIndex , aSplitElement ) ; }
",split split element by beginning,3,5,5,replaces an element at the beginning with the specified element,5,5,5,"replace an existing one interior instance with the elements of the list , and if it ' s in the new one .",5,4,5,"adds a split element to the beginning instruction this is trying to store trying the index for the formula . typically , store the element tree rooted at the index .",5,3,5,splits the split of in the but .,1,2,1
"private static int numInitialSplits ( long numRecords ) { final int maxSplits = _NUM ; final long recordsPerSplit = _NUM ; return ( int ) Math . min ( maxSplits , numRecords / recordsPerSplit + _NUM ) ; }
",compute the number of records in the specified number of searchfor .,5,5,5,uses a split number of attempts to make the main measurement selection note that the number of times the number of isolated isolated can occur .,5,3,5,calculates the number of rules that can be easily used later on any other export ( this is necessary for the given snapshot ) .,4,3,5,returns the largest power of two formatted that have the given size .,3,4,5,returns the total of records record in in range record in records .,3,3,3
"protected void markUsed ( Entry entry ) { entry . lastUsed = System . nanoTime ( ) ; }
",mark entry as activated by use it to make sure that a connection is activated .,5,5,5,mark the current node as follows .,3,5,5,mark the entry as separated by the currently collected key .,3,5,5,mark the stream as soon as we fail .,2,5,5,starts the entry entry .,2,2,3
"private < T > UnaryOperator < T > compose ( UnaryOperator < T > before , UnaryOperator < T > after ) { return null ; }
","compose a stream of functions into a single function , which applies each one after the other",5,5,5,"create a function after a side function of mapping , which applies each batch of a batch operator after the other operator has been applied , which is a mix function .",5,3,5,a function to compose one - hand functions of a ' before ',4,5,5,"tries to locate a stream of the given function which is , returning null .",3,5,4,todo the operations of as a function function which .,2,2,3
"private boolean hasNext ( Pattern pattern ) { if ( ! hasNext ( ) ) { return _BOOL ; } Matcher matcher = pattern . matcher ( gserValue . substring ( pos , length ) ) ; return matcher . find ( ) ; }
",returns true if the input matches the given pattern .,5,5,5,skips the next iff the parser has at the given position in the pattern .,3,5,5,returns true if the given pattern contains at least one item in the given pattern,5,5,5,returns true if the input matched the given pattern has a point in the document .,5,5,5,determines if the given token is is the given pattern .,3,5,5
"public static < R , A , B > CompletionStage < R > combine ( CompletionStage < A > a , CompletionStage < B > b , BiFunction < A , B , R > function ) { return a . thenCombine ( b , function ) ; }
",combine a function into a function .,3,5,4,the function should be supplied as the result of applying two values . the function finds each byte using a treeset function and the results from the original function and and returns the result .,5,3,5,this function takes a single function representation as the first pass of a function,4,5,5,this function is called to be a bridge - b / c connected to a single distribution,3,5,5,this the of of a a single that .,1,2,1
"public StreamInfoManager ( TwitchApi api , StreamInfoListener listener ) { this . listener = listener ; this . api = api ; pendingRequests = new HashMap < > ( ) ; invalidStreamInfo = new StreamInfo ( STRING , listener ) ; invalidStreamInfo . setRequested ( ) ; }
",creates a stream object .,4,5,5,creates a new instance with the specified api .,5,5,5,create a new instance of this class .,3,5,5,initializing for the target listener with the information supplied in the client .,5,5,5,create a new instance .,3,5,5
"public Sentence asSentence ( ) { return Sentence . newConjunction ( sentences ) ; }
",returns a sentence sentence from the annotation .,3,5,4,convert the sentence into its sub - model .,5,5,5,returns a structuredtranslation of the structure .,4,5,4,returns a conjunction of conjuncts .,4,5,5,return the sentence of sentence on the sentence .,2,3,1
"public boolean isPronoun ( ) { return typeString . contains ( SUFFIX_PRONOUN ) ; }
",determine if the expression is a tree .,3,5,5,determine if the expression is some fluid .,5,5,5,determine if the expression is some fluid .,5,5,5,determine if the expression is some food .,3,5,5,determine if the expression is a regular expression .,4,5,5
"KeyStoreState ( ) { }
",create a new empty keystore,3,5,5,create new empty state store instance .,5,5,5,construct new empty keystore,4,5,5,create a new empty keystore for the state of an unsaved journal,5,4,5,creates new instance message of .,2,5,4
"private static boolean isInNeedOfForm ( UIComponent component ) { return ( component instanceof ActionSource || component instanceof ActionSource2 || component instanceof EditableValueHolder ) ; }
",determines whether a component is an action .,3,5,5,determine if the given action is source .,5,5,5,determines if the component of the component represents the given component and the component components .,3,3,2,check if the component is in the preview component .,5,5,5,determine a bigdecimal check determine button the component area .,3,3,2
"public Node ( Coordinate pt ) { this ( pt , new DirectedEdgeStar ( ) ) ; }
",creates a new rotate node with a unique capacity .,5,5,5,creates a copy of the focus,3,5,5,"creates a new , and specifies the polygon for the given node .",5,5,4,creates a new edge edge with the given node .,5,5,4,creates a new instance the given location .,3,4,3
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the union size of two bitsets .,5,5,5,compute the intersection size of two bitsets .,2,5,5
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,4,5,5,outputs a description of one attribute .,4,5,5,returns a text attribute list ( ) that is represented by a small string .,5,4,5,returns a description of this attribute and the auto - string describing a ring of the class and values .,5,3,5,returns optimal text text of .,2,4,1
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5,main recursive method to examine the directory hierarchy .,5,5,5
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide with invalid rounding mode,5,5,5,divide rounding negative rounding mode .,3,5,3
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,3,5,5,kills a specific player .,5,5,5,"start tom , no longer used .",3,5,3,removes an storage range from items,4,5,5,remove an exit status status status the status status .,3,4,2
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",4,5,5,determine the level of the given level,5,5,5,"return the index to fit the given level , replacing all transfers of the old edge to the new level",5,3,5,multiplies = max + max level,3,5,5,checks the not minimum for .,2,4,2
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,4,5,5,emits a string entry to a log file in the local cache that contains the specified entry .,5,5,5,inserts an entry into the disk cache .,3,5,5,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,5,3,5,internal snapshot of and local local file and and and and .,2,3,1
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5,receive notification of the end of an element .,5,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,5,5,5,back from the queue < p > json object can be called after the stop is committed,4,5,5,update the view from the json and fill the given inputs,4,5,5,set the uninitialized state of uninitialized requests,3,5,5,computes the media object the page page if .,2,4,2
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates an new instance of this class using .,4,5,5
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a arguments .,2,5,5
"public RepeatedFieldBuilder < MType , BType , IType > addMessage ( MType message ) { if ( message == null ) { throw new NullPointerException ( ) ; } ensureMutableMessageList ( ) ; messages . add ( message ) ; if ( builders != null ) { builders . add ( null ) ; } onChanged ( ) ; incrementModCounts ( ) ; return this ; }
",appends the specified element to the end of this list .,4,5,5,appends the specified element to the end of this list .,4,5,5,appends the specified element to the end of this list .,4,5,5,"appends the specified element to the end of this list , if the element is not already present .",4,5,5,appends the specified element to the end of this list .,3,5,5
"private static boolean checkValue ( String val ) throws MalformedObjectNameException { if ( val == null ) throw new NullPointerException ( STRING ) ; final int len = val . length ( ) ; if ( len == _NUM ) return _BOOL ; final char [ ] s = val . toCharArray ( ) ; final int [ ] result = parseValue ( s , _NUM ) ; final int endValue = result [ _NUM ] ; final boolean value_pattern = result [ _NUM ] == _NUM ; if ( endValue < len ) throw new MalformedObjectNameException ( STRING + s [ endValue ] + STRING ) ; return value_pattern ; }
",check the value of the two strings . the following value is within the # ( ) method,1,3,3,checks that a given string value is either .,2,4,2,check that the value is a valid pattern string .,4,5,5,parse a value in the form " or value of an object,2,3,3,matches the the specified value matches the valid integer .,4,5,5
"public void remove ( ) throws RecurrenceInfoException { List < RecurrenceRule > rulesList = new ArrayList < RecurrenceRule > ( ) ; rulesList . addAll ( rRulesList ) ; rulesList . addAll ( eRulesList ) ; try { for ( RecurrenceRule rule : rulesList ) rule . remove ( ) ; info . remove ( ) ; } catch ( RecurrenceRuleException rre ) { throw new RecurrenceInfoException ( rre . getMessage ( ) , rre ) ; } catch ( GenericEntityException gee ) { throw new RecurrenceInfoException ( gee . getMessage ( ) , gee ) ; } }
",removes the recurrence from persistant store .,4,5,5,removes the recurrence from persistant store .,4,5,5,removes the recurrence from persistant store .,4,5,5,removes the recurrence from persistant store .,4,5,5,removes the recurrence from persistant store .,4,5,5
"public static int unionSize ( long [ ] x , long [ ] y ) { final int lx = x . length , ly = y . length ; final int min = ( lx < ly ) ? lx : ly ; int i = _NUM , res = _NUM ; for ( ; i < min ; i ++ ) { res += Long . bitCount ( x [ i ] | y [ i ] ) ; } for ( ; i < lx ; i ++ ) { res += Long . bitCount ( x [ i ] ) ; } for ( ; i < ly ; i ++ ) { res += Long . bitCount ( y [ i ] ) ; } return res ; }
",compute the union size of two bitsets .,4,5,5,compute the union size of two bitsets .,4,5,5,compute the union size of two bitsets .,4,5,5,compute the union size of two bitsets .,4,5,5,compute the intersection size of two bitsets .,4,5,5
"public String toString ( ) { StringBuffer text = new StringBuffer ( ) ; if ( ( m_classAttribute == null ) ) { return STRING ; } try { text . append ( STRING ) ; text . append ( STRING + m_kernel . toString ( ) + STRING ) ; for ( int i = _NUM ; i < m_classAttribute . numValues ( ) ; i ++ ) { for ( int j = i + _NUM ; j < m_classAttribute . numValues ( ) ; j ++ ) { text . append ( STRING + m_classAttribute . value ( i ) + STRING + m_classAttribute . value ( j ) + STRING ) ; text . append ( m_classifiers [ i ] [ j ] ) ; if ( m_fitLogisticModels ) { text . append ( STRING ) ; if ( m_classifiers [ i ] [ j ] . m_logistic == null ) { text . append ( STRING ) ; } else { text . append ( m_classifiers [ i ] [ j ] . m_logistic ) ; } } text . append ( STRING ) ; } } } catch ( Exception e ) { return STRING ; } return text . toString ( ) ; }
",prints out the attribute evaluator .,2,5,5,outputs a description of one attribute .,2,5,5,returns a text attribute list ( ) that is represented by a small string .,3,5,5,returns a description of this attribute and the auto - string describing a ring of the class and values .,4,5,5,returns optimal text text of .,1,3,3
"private static boolean isDoubleEqual ( double value , double valueToCompare ) { return ( Math . abs ( value - valueToCompare ) < _NUM ) ; }
",verifies that the double value is equal to the given double . if the double value is not finite as a negative number .,4,3,5,returns true if the value is a " decimal " double to the given double value .,1,4,4,check if double value is equal to the tail,4,5,5,returns true if the given value is equal to this minimum function .,2,5,5,this if value present value to needed to .,1,3,2
"public void testIntValuePos ( ) { String a = STRING ; BigDecimal aNumber = new BigDecimal ( a ) ; int result = - _NUM ; assertTrue ( STRING , aNumber . intValue ( ) == result ) ; }
",integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a positive bigdecimal,3,5,5,integer value of a negative bigdecimal .,3,5,5
"private void walk ( File directory , int depth , Collection < T > results ) throws IOException { checkIfCancelled ( directory , depth , results ) ; if ( handleDirectory ( directory , depth , results ) ) { handleDirectoryStart ( directory , depth , results ) ; int childDepth = depth + _NUM ; if ( depthLimit < _NUM || childDepth <= depthLimit ) { checkIfCancelled ( directory , depth , results ) ; File [ ] childFiles = filter == null ? directory . listFiles ( ) : directory . listFiles ( filter ) ; childFiles = filterDirectoryContents ( directory , depth , childFiles ) ; if ( childFiles == null ) { handleRestricted ( directory , childDepth , results ) ; } else { for ( File childFile : childFiles ) { if ( childFile . isDirectory ( ) ) { walk ( childFile , childDepth , results ) ; } else { checkIfCancelled ( childFile , childDepth , results ) ; handleFile ( childFile , childDepth , results ) ; checkIfCancelled ( childFile , childDepth , results ) ; } } } } handleDirectoryEnd ( directory , depth , results ) ; } checkIfCancelled ( directory , depth , results ) ; }
",main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5,main recursive method to examine the directory hierarchy .,4,5,5
"public static Object [ ] ordinalArray ( TupleSet tuples , String field ) { return ordinalArray ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
",get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator and field .,5,5,5,get a sorted array containing all column values for a given tuple iterator .,4,5,5
"public void testDivideExceptionInvalidRM ( ) { String a = STRING ; int aScale = _NUM ; String b = STRING ; int bScale = _NUM ; BigDecimal aNumber = new BigDecimal ( new BigInteger ( a ) , aScale ) ; BigDecimal bNumber = new BigDecimal ( new BigInteger ( b ) , bScale ) ; try { aNumber . divide ( bNumber , _NUM ) ; fail ( STRING ) ; } catch ( IllegalArgumentException e ) { assertEquals ( STRING , STRING , e . getMessage ( ) ) ; } }
",divide with invalid rounding mode,2,5,5,divide with invalid rounding mode,2,5,5,divide with invalid rounding mode,2,5,5,divide with invalid rounding mode,2,5,5,divide rounding negative rounding mode .,3,5,5
"public static boolean isStringType ( Type t ) { return t . equals ( RefType . v ( STRING ) ) ; }
",return true if this reference is a string for a given type .,4,5,5,"tells whether the given type is a string . a type is a link type , i . e . t , "" & lt ; "" .",5,4,4,check if a given string is a integer .,1,5,5,"return true if this type is a string , false otherwise .",4,5,5,return true if this type is to as as or .,2,3,2
"private void validateSqlStatement ( String sql , int jdbcStatementIndex ) { Assert . isTrue ( StringUtils . isNotBlank ( sql ) , STRING + jdbcStatementIndex + STRING ) ; }
",validate if the jni statement is not valid,3,4,4,validate the given sql statement in the database .,2,5,5,check if sql statement .,3,5,5,"validates the given sql statement and adds statements to the expected parameters . if the sql string is not empty , it will be an exception .",2,5,5,check if passed statement statement entry any statement is the database .,1,2,2
"public static Long [ ] valuesOf ( long [ ] array ) { Long [ ] dest = new Long [ array . length ] ; for ( int i = _NUM ; i < array . length ; i ++ ) { dest [ i ] = Long . valueOf ( array [ i ] ) ; } return dest ; }
",converts to object array .,3,5,5,converts to object array .,3,5,5,converts to object array .,3,5,5,converts to object array .,3,5,5,converts to byte array .,3,5,5
"private static void useMissile ( Player player ) { StackableItem projectilesItem = null ; if ( player . getRangeWeapon ( ) != null ) { projectilesItem = player . getAmmunition ( ) ; } if ( projectilesItem == null ) { projectilesItem = player . getMissileIfNotHoldingOtherWeapon ( ) ; } if ( projectilesItem != null ) { projectilesItem . removeOne ( ) ; } }
",make a dialog garbage it starts its own rate,2,5,5,kills a specific player .,3,5,5,"start tom , no longer used .",1,3,2,removes an storage range from items,4,5,5,remove an exit status status status the status status .,3,2,3
"private int determineMaxLevelRec ( int level , Node v ) { int newLevel = level ; for ( Edge e = v . getFirstOutEdge ( ) ; e != null ; e = v . getNextOutEdge ( e ) ) { newLevel = Math . max ( newLevel , determineMaxLevelRec ( level , e . getTarget ( ) ) + _NUM ) ; } return newLevel ; }
","boxradius level , calculate the relevant level level , and null values of all edges .",2,3,3,determine the level of the given level,3,4,5,"return the index to fit the given level , replacing all transfers of the old edge to the new level",3,5,4,multiplies = max + max level,3,5,5,checks the not minimum for .,1,5,3
"private synchronized void putMapEntry ( String localId , MapEntry entry ) { if ( ! isLocalId ( localId ) ) { throw new IllegalStateException ( STRING + localId + STRING ) ; } JSONObject json = new JSONObject ( ) ; try { json . put ( STRING , entry . retainCount ) ; if ( entry . objectId != null ) { json . put ( STRING , entry . objectId ) ; } } catch ( JSONException je ) { throw new IllegalStateException ( STRING , je ) ; } File file = new File ( diskPath , localId ) ; if ( ! diskPath . exists ( ) ) { diskPath . mkdirs ( ) ; } try { ParseFileUtils . writeJSONObjectToFile ( file , json ) ; } catch ( IOException e ) { } }
",store entry to xml request,3,5,5,emits a string entry to a log file in the local cache that contains the specified entry .,3,5,5,inserts an entry into the disk cache .,4,5,5,this is invoked in the json implementation to ensure that we need to store a tomcat in the json state and saves the state in the request .,4,5,5,internal snapshot of and local local file and and and and .,2,2,2
"public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_inEntityRef ) return ; m_prefixMap . popNamespaces ( m_elemContext . m_currentElemDepth , null ) ; try { final java . io . Writer writer = m_writer ; if ( m_elemContext . m_startTagOpen ) { if ( m_tracer != null ) super . fireStartElem ( m_elemContext . m_elementName ) ; int nAttrs = m_attributes . getLength ( ) ; if ( nAttrs > _NUM ) { processAttributes ( m_writer , nAttrs ) ; m_attributes . clear ( ) ; } if ( m_spaceBeforeClose ) writer . write ( STRING ) ; else writer . write ( STRING ) ; } else { if ( m_cdataTagOpen ) closeCDATA ( ) ; if ( shouldIndent ( ) ) indent ( m_elemContext . m_currentElemDepth - _NUM ) ; writer . write ( STRING ) ; writer . write ( STRING ) ; writer . write ( name ) ; writer . write ( STRING ) ; } } catch ( IOException e ) { throw new SAXException ( e ) ; } if ( ! m_elemContext . m_startTagOpen && m_doIndent ) { m_ispreserve = m_preserves . isEmpty ( ) ? _BOOL : m_preserves . pop ( ) ; } m_isprevtext = _BOOL ; if ( m_tracer != null ) super . fireEndElem ( name ) ; m_elemContext = m_elemContext . m_prev ; }
",receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5,receive notification of the end of an element .,3,5,5
"public static void f ( String msg , Object ... args ) { if ( ! allowWtf ) return ; StackTraceElement caller = getCallerStackTraceElement ( ) ; String tag = generateTag ( caller ) ; if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
",send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message,5,5,5,send a fatal error log message .,5,5,5
"public boolean boundScroll ( ) { float curScroll = getStackScroll ( ) ; float newScroll = getBoundedStackScroll ( curScroll ) ; if ( Float . compare ( newScroll , curScroll ) != _NUM ) { setStackScroll ( newScroll ) ; return _BOOL ; } return _BOOL ; }
","bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,5,5,"bounds the current scroll if necessary , but does not synchronize the stack view with the model .",4,5,5,bounds the current scroll if necessary but .,4,5,5
"public void waitForVolumesToBeVisible ( CGRequestParams request ) { scan ( request . getCopies ( ) , request . getRsets ( ) ) ; }
",causes the request to be done in the " importation " and " set of outstanding .,3,4,3,waits for the request to highlight the locator .,4,5,5,waits for the node to have expired .,3,5,5,"f1 the request parameters why on an input request . after the request is completed , this call is used to test the visited activities .",2,4,3,handles the request request request request request request request request request request used request .,1,1,1
"public void updateView ( ) { if ( fInputElement != null && fParentComposite != null ) { IndicatorViewState oldState = fStateMap . get ( fInputElement ) ; boolean reload = fFilesToReoad . contains ( fInputElement ) ; if ( reload || oldState == null ) { JsonObject jsonObject = DroidsafePluginUtilities . parseIndicatorFile ( fInputElement ) ; if ( jsonObject == null ) return ; fFilesToReoad . remove ( fInputElement ) ; fState = new IndicatorViewState ( fInputElement , jsonObject , getSecuritySpec ( ) , oldState ) ; fStateMap . put ( fInputElement , fState ) ; } else { fState = oldState ; } setPartName ( fState . indicatorType ) ; showPage ( PAGE_VIEWER ) ; fTreeViewer . setInput ( fState . jsonObject ) ; if ( fTreeViewer . getSorter ( ) == null ) sortByField ( getSortByField ( ) ) ; } else { setPartName ( DEFAULT_PART_NAME ) ; } }
",fills and load a attached state object from the log and then understand the current state .,3,5,5,back from the queue < p > json object can be called after the stop is committed,3,4,3,update the view from the json and fill the given inputs,4,5,5,set the uninitialized state of uninitialized requests,2,5,5,computes the media object the page page if .,1,3,3
"public void addSeriesRenderer ( int index , SimpleSeriesRenderer renderer ) { mRenderers . add ( index , renderer ) ; }
",adds a simple renderer to the multiple renderer .,4,5,5,adds a simple renderer to the multiple renderer .,4,5,5,adds a simple renderer to the multiple renderer .,4,5,5,adds a simple renderer to the multiple renderer .,4,5,5,adds a simple renderer to the multiple renderer .,4,5,5
"private float calcAngle ( float value ) { return value / mData . getYValueSum ( ) * _NUM ; }
",calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value,5,5,5,calculates the needed angle for a given value .,5,5,5
"protected < T extends AbstractOptionValue < ? , ? > > AbstractOptions ( Function < T , T > valueFilter , AbstractOptions baseOptions , Iterable < T > values ) { requireNonNull ( baseOptions , STRING ) ; requireNonNull ( valueFilter , STRING ) ; requireNonNull ( values , STRING ) ; valueMap = new IdentityHashMap < > ( baseOptions . valueMap ) ; putAll ( valueFilter , StreamSupport . stream ( values . spliterator ( ) , _BOOL ) ) ; }
",creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates a new instance .,3,5,5,creates an new instance of this class using .,3,5,5
"public CharSeq concat ( CharSeq another ) { return new CharSeq ( str + another . str ) ; }
",create a new charseq with the given string,5,5,5,construct a new charseq with the values of this charseq that matches the given charseq .,4,5,5,returns a new charseq with the same content,1,5,5,"returns a new charseq whose value is this charseq , with the given string",5,5,5,returns a with given given string .,2,3,3
"private void formatAndLogThrowable ( LoggingLevel level , Color color , String msg , Throwable t ) { if ( ! USE_COLORS ) { formatAndLogThrowable ( level , msg , t ) ; return ; } if ( PhotonLogger . level . id < level . id ) { return ; } LocalDateTime dateTime = LocalDateTime . now ( ) ; String formatted = formatLogLine ( level , dateTime , msg ) ; LoggingService . logThrowable ( dateTime , t , formatted , color ) ; }
",formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a throwable .,4,5,5,formats and logs a message with a arguments .,4,5,5
"public static String decodeCharset ( String s , String charset ) { if ( s == null ) { return null ; } try { byte buf [ ] = s . getBytes ( ASCII_CHARSET ) ; return ( new String ( buf , _NUM , buf . length , charset ) ) ; } catch ( UnsupportedEncodingException uee ) { return s ; } }
","decodes ' s basic encoding - encoded octets in ' % ' , using the specified encoding .",3,4,3,decodes data in the specified string using the utf - 8 scheme .,4,5,5,decode a string that looks like " % 25 " and two - character escapes " . the platform is converted to the character encoding .,3,4,4,"decodes a byte array into its string , using the specified encoding as specified by the base64 encoding . escaped characters are converted back to their original representation .",3,4,4,converts the contents that an string using .,2,5,3
"public void addRestrictedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( restrictedDomains == null ) { restrictedDomains = new ArrayList < > ( ) ; } restrictedDomains . add ( domainName ) ; }
",adds specified domain name to the list of restricted domains,5,5,5,adds specified domain name to the list of restricted domains,5,5,5,adds specified domain name to the list of restricted domains,5,5,5,add specified domain name to the list of permitted domains,5,5,5,adds a sub name to the sub of sub sub sub .,2,2,2
